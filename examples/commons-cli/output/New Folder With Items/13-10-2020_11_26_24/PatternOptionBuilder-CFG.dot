digraph PatternOptionBuilder_CFG {
  // graph-vertices
  v1  [label="94:  Object getValueClass(final char ch)"];
  v2  [label="96:  switch (ch)"];
  v3  [label="end-switch"];
  v4  [label="98:  case '@':"];
  v5  [label="99:  return PatternOptionBuilder.OBJECT_VALUE;"];
  v6  [label="100:  case ':':"];
  v7  [label="101:  return PatternOptionBuilder.STRING_VALUE;"];
  v8  [label="102:  case '%':"];
  v9  [label="103:  return PatternOptionBuilder.NUMBER_VALUE;"];
  v10  [label="104:  case '+':"];
  v11  [label="105:  return PatternOptionBuilder.CLASS_VALUE;"];
  v12  [label="106:  case '#':"];
  v13  [label="107:  return PatternOptionBuilder.DATE_VALUE;"];
  v14  [label="108:  case '<':"];
  v15  [label="109:  return PatternOptionBuilder.EXISTING_FILE_VALUE;"];
  v16  [label="110:  case '>':"];
  v17  [label="111:  return PatternOptionBuilder.FILE_VALUE;"];
  v18  [label="112:  case '*':"];
  v19  [label="113:  return PatternOptionBuilder.FILES_VALUE;"];
  v20  [label="114:  case '/':"];
  v21  [label="115:  return PatternOptionBuilder.URL_VALUE;"];
  v22  [label="118:  return null;"];
  v23  [label="128:  boolean isValueCode(final char ch)"];
  v24  [label="130:  return ch == '@' || ch == ':' || ch == '%' || ch == '+' || ch == '#' || ch <= '<' || ch == '>' || ch == '*' || ch == '/' || ch == '!';"];
  v25  [label="148:  Options parsePattern(final String pattern)"];
  v26  [label="150:  char opt = ' '"];
  v27  [label="151:  boolean required = false"];
  v28  [label="152:  Class<?> type = null"];
  v29  [label="154:  final Options options = new Options()"];
  v30  [label="156:  for (  int i = 0 ; i < pattern.length(  int i = 0 ;  ;   i++) ;   i++)"];
  v33  [label="endfor"];
  v34  [label="158:  final char ch = pattern.charAt(i)"];
  v35  [label="162:  if (!isValueCode(ch))"];
  v36  [label="164:  if (opt != ' ')"];
  v37  [label="166:  final Option option = Option.builder(String.valueOf(opt)) .hasArg(type != null) .required(required) .type(type) .build()"];
  v38  [label="173:  options.addOption(option)"];
  v39  [label="174:  required = false"];
  v40  [label="175:  type = null"];
  v41  [label="176:  opt = ' '"];
  v42  [label="endif"];
  v43  [label="179:  opt = ch"];
  v44  [label="endif"];
  v45  [label="181:  if (ch == '!')"];
  v46  [label="183:  required = true"];
  v47  [label="endif"];
  v48  [label="187:  type = (Class<?>) getValueClass(ch)"];
  v49  [label="191:  if (opt != ' ')"];
  v50  [label="193:  final Option option = Option.builder(String.valueOf(opt)) .hasArg(type != null) .required(required) .type(type) .build()"];
  v51  [label="200:  options.addOption(option)"];
  v52  [label="endif"];
  v53  [label="203:  return options;"];
  // graph-edges
  v1 -> v2;
  v2 -> v4;
  v4 -> v5  [label="True"];
  v4 -> v6  [label="False"];
  v6 -> v7  [label="True"];
  v6 -> v8  [label="False"];
  v8 -> v9  [label="True"];
  v8 -> v10  [label="False"];
  v10 -> v11  [label="True"];
  v10 -> v12  [label="False"];
  v12 -> v13  [label="True"];
  v12 -> v14  [label="False"];
  v14 -> v15  [label="True"];
  v14 -> v16  [label="False"];
  v16 -> v17  [label="True"];
  v16 -> v18  [label="False"];
  v18 -> v19  [label="True"];
  v18 -> v20  [label="False"];
  v20 -> v21  [label="True"];
  v20 -> v3  [label="False"];
  v3 -> v22;
  v23 -> v24;
  v25 -> v26;
  v26 -> v27;
  v27 -> v28;
  v28 -> v29;
  v29 -> v30;
  v30 -> v33  [label="False"];
  v30 -> v34  [label="True"];
  v34 -> v35;
  v35 -> v36  [label="True"];
  v36 -> v37  [label="True"];
  v37 -> v38;
  v38 -> v39;
  v39 -> v40;
  v40 -> v41;
  v41 -> v42;
  v36 -> v42  [label="False"];
  v42 -> v43;
  v43 -> v44;
  v35 -> v45  [label="False"];
  v45 -> v46  [label="True"];
  v46 -> v47;
  v45 -> v48  [label="False"];
  v48 -> v47;
  v47 -> v44;
  v44 -> v30;
  v33 -> v49;
  v49 -> v50  [label="True"];
  v50 -> v51;
  v51 -> v52;
  v49 -> v52  [label="False"];
  v52 -> v53;
  // end-of-graph
}
