
copy : getDelimiter()C=[912,913
];;withDelimiter(C)Lorg/apache/commons/csv/CSVFormat;=[1751,1752
1752,1755
];;isLineBreak(C)Z=[636,637
];;<init>(CLjava/lang/Character;Lorg/apache/commons/csv/QuoteMode;Ljava/lang/Character;Ljava/lang/Character;ZZLjava/lang/String;Ljava/lang/String;[Ljava/lang/Object;[Ljava/lang/String;ZZZZZZ)V=[788,789
];;toStringArray([Ljava/lang/Object;)[Ljava/lang/String;=[1587,1588
1588,1589
];;validate()V=[1621,1622
1622,1626
1626,1631
1631,1636
1636,1641
1641,1646
1646,1651
1651,1656
1656,1665
];;equals(Ljava/lang/Object;)Z=[792,793
793,796
796,797
796,799
799,800
793,794
799,803
803,804
804,807
807,810
810,814
814,817
817,818
818,824
824,825
825,831
831,832
832,838
838,841
841,844
844,847
847,850
850,854
854,857
];;hashCode()I=[1042,1043
1043,1044
1044,1046
1046,1047
1047,1048
1048,1049
1049,1050
1050,1051
1051,1052
1052,1053
1053,1054
1054,1055
1055,1056
1056,1057
1057,1058
]

testDelimiterSameAsCommentStartThrowsException : withDelimiter(C)Lorg/apache/commons/csv/CSVFormat;=[1751,1752
1752,1755
];;isLineBreak(C)Z=[636,637
];;<init>(CLjava/lang/Character;Lorg/apache/commons/csv/QuoteMode;Ljava/lang/Character;Ljava/lang/Character;ZZLjava/lang/String;Ljava/lang/String;[Ljava/lang/Object;[Ljava/lang/String;ZZZZZZ)V=[786,787
787,788
];;toStringArray([Ljava/lang/Object;)[Ljava/lang/String;=[1587,1588
1588,1589
];;validate()V=[1621,1622
1622,1626
1626,1631
1631,1636
1636,1641
1641,1646
1646,1651
1651,1656
1656,1665
1636,1637
];;withCommentMarker(C)Lorg/apache/commons/csv/CSVFormat;=[1718,1719
];;withCommentMarker(Ljava/lang/Character;)Lorg/apache/commons/csv/CSVFormat;=[1733,1734
1734,1737
];;isLineBreak(Ljava/lang/Character;)Z=[648,649
]

testDelimiterSameAsEscapeThrowsException : withDelimiter(C)Lorg/apache/commons/csv/CSVFormat;=[1751,1752
1752,1755
];;isLineBreak(C)Z=[636,637
];;<init>(CLjava/lang/Character;Lorg/apache/commons/csv/QuoteMode;Ljava/lang/Character;Ljava/lang/Character;ZZLjava/lang/String;Ljava/lang/String;[Ljava/lang/Object;[Ljava/lang/String;ZZZZZZ)V=[786,787
787,788
];;toStringArray([Ljava/lang/Object;)[Ljava/lang/String;=[1587,1588
1588,1589
];;validate()V=[1621,1622
1622,1626
1626,1631
1631,1636
1636,1641
1641,1646
1646,1651
1651,1656
1656,1665
1631,1632
];;withEscape(C)Lorg/apache/commons/csv/CSVFormat;=[1769,1770
];;withEscape(Ljava/lang/Character;)Lorg/apache/commons/csv/CSVFormat;=[1782,1783
1783,1786
];;isLineBreak(Ljava/lang/Character;)Z=[648,649
]

testDuplicateHeaderElements : withHeader([Ljava/lang/String;)Lorg/apache/commons/csv/CSVFormat;=[1941,1942
];;<init>(CLjava/lang/Character;Lorg/apache/commons/csv/QuoteMode;Ljava/lang/Character;Ljava/lang/Character;ZZLjava/lang/String;Ljava/lang/String;[Ljava/lang/Object;[Ljava/lang/String;ZZZZZZ)V=[787,788
];;toStringArray([Ljava/lang/Object;)[Ljava/lang/String;=[1587,1588
1588,1589
];;validate()V=[1621,1622
1622,1626
1626,1631
1631,1636
1636,1641
1641,1646
1646,1651
1651,1656
1656,1657
1657,1658
1658,1659
1659,1658
1659,1660
1660,1661
];;isLineBreak(C)Z=[636,637
]

testEqualsCommentStart : newFormat(C)Lorg/apache/commons/csv/CSVFormat;=[672,673
];;<init>(CLjava/lang/Character;Lorg/apache/commons/csv/QuoteMode;Ljava/lang/Character;Ljava/lang/Character;ZZLjava/lang/String;Ljava/lang/String;[Ljava/lang/Object;[Ljava/lang/String;ZZZZZZ)V=[784,785
785,786
786,787
787,788
788,789
];;toStringArray([Ljava/lang/Object;)[Ljava/lang/String;=[1587,1588
1588,1589
];;validate()V=[1621,1622
1622,1626
1626,1631
1631,1636
1636,1641
1641,1646
1646,1651
1651,1656
1656,1665
];;isLineBreak(C)Z=[636,637
];;withQuote(C)Lorg/apache/commons/csv/CSVFormat;=[2072,2073
];;withQuote(Ljava/lang/Character;)Lorg/apache/commons/csv/CSVFormat;=[2085,2086
2086,2089
];;isLineBreak(Ljava/lang/Character;)Z=[648,649
];;withCommentMarker(C)Lorg/apache/commons/csv/CSVFormat;=[1718,1719
];;withCommentMarker(Ljava/lang/Character;)Lorg/apache/commons/csv/CSVFormat;=[1733,1734
1734,1737
];;withQuoteMode(Lorg/apache/commons/csv/QuoteMode;)Lorg/apache/commons/csv/CSVFormat;=[2102,2103
];;equals(Ljava/lang/Object;)Z=[792,793
793,796
796,799
799,803
803,804
804,807
807,810
810,814
814,817
817,821
821,822
]

testEqualsDelimiter : newFormat(C)Lorg/apache/commons/csv/CSVFormat;=[672,673
];;<init>(CLjava/lang/Character;Lorg/apache/commons/csv/QuoteMode;Ljava/lang/Character;Ljava/lang/Character;ZZLjava/lang/String;Ljava/lang/String;[Ljava/lang/Object;[Ljava/lang/String;ZZZZZZ)V=[787,788
788,789
];;toStringArray([Ljava/lang/Object;)[Ljava/lang/String;=[1587,1588
1588,1589
];;validate()V=[1621,1622
1622,1626
1626,1631
1631,1636
1636,1641
1641,1646
1646,1651
1651,1656
1656,1665
];;isLineBreak(C)Z=[636,637
];;equals(Ljava/lang/Object;)Z=[792,793
793,796
796,799
799,803
803,804
804,805
]

testEqualsEscape : newFormat(C)Lorg/apache/commons/csv/CSVFormat;=[672,673
];;<init>(CLjava/lang/Character;Lorg/apache/commons/csv/QuoteMode;Ljava/lang/Character;Ljava/lang/Character;ZZLjava/lang/String;Ljava/lang/String;[Ljava/lang/Object;[Ljava/lang/String;ZZZZZZ)V=[783,784
784,785
785,786
786,787
787,788
788,789
];;toStringArray([Ljava/lang/Object;)[Ljava/lang/String;=[1587,1588
1588,1589
];;validate()V=[1621,1622
1622,1626
1626,1631
1631,1636
1636,1641
1641,1646
1646,1651
1651,1656
1656,1665
];;isLineBreak(C)Z=[636,637
];;withQuote(C)Lorg/apache/commons/csv/CSVFormat;=[2072,2073
];;withQuote(Ljava/lang/Character;)Lorg/apache/commons/csv/CSVFormat;=[2085,2086
2086,2089
];;isLineBreak(Ljava/lang/Character;)Z=[648,649
];;withCommentMarker(C)Lorg/apache/commons/csv/CSVFormat;=[1718,1719
];;withCommentMarker(Ljava/lang/Character;)Lorg/apache/commons/csv/CSVFormat;=[1733,1734
1734,1737
];;withEscape(C)Lorg/apache/commons/csv/CSVFormat;=[1769,1770
];;withEscape(Ljava/lang/Character;)Lorg/apache/commons/csv/CSVFormat;=[1782,1783
1783,1786
];;withQuoteMode(Lorg/apache/commons/csv/QuoteMode;)Lorg/apache/commons/csv/CSVFormat;=[2102,2103
];;equals(Ljava/lang/Object;)Z=[792,793
793,796
796,799
799,803
803,804
804,807
807,810
810,814
814,817
817,821
821,824
824,828
828,829
]

testEqualsHeader : newFormat(C)Lorg/apache/commons/csv/CSVFormat;=[672,673
];;<init>(CLjava/lang/Character;Lorg/apache/commons/csv/QuoteMode;Ljava/lang/Character;Ljava/lang/Character;ZZLjava/lang/String;Ljava/lang/String;[Ljava/lang/Object;[Ljava/lang/String;ZZZZZZ)V=[779,780
780,781
781,782
782,783
783,784
784,785
785,786
786,787
787,788
788,789
];;toStringArray([Ljava/lang/Object;)[Ljava/lang/String;=[1587,1588
1588,1589
];;validate()V=[1621,1622
1622,1626
1626,1631
1631,1636
1636,1641
1641,1646
1646,1651
1651,1656
1656,1665
1656,1657
1657,1658
1658,1659
1659,1658
1658,1665
];;isLineBreak(C)Z=[636,637
];;withRecordSeparator(C)Lorg/apache/commons/csv/CSVFormat;=[2121,2122
];;withRecordSeparator(Ljava/lang/String;)Lorg/apache/commons/csv/CSVFormat;=[2140,2141
];;withCommentMarker(C)Lorg/apache/commons/csv/CSVFormat;=[1718,1719
];;withCommentMarker(Ljava/lang/Character;)Lorg/apache/commons/csv/CSVFormat;=[1733,1734
1734,1737
];;isLineBreak(Ljava/lang/Character;)Z=[648,649
];;withEscape(C)Lorg/apache/commons/csv/CSVFormat;=[1769,1770
];;withEscape(Ljava/lang/Character;)Lorg/apache/commons/csv/CSVFormat;=[1782,1783
1783,1786
];;withHeader([Ljava/lang/String;)Lorg/apache/commons/csv/CSVFormat;=[1941,1942
];;withIgnoreEmptyLines()Lorg/apache/commons/csv/CSVFormat;=[1975,1976
];;withIgnoreEmptyLines(Z)Lorg/apache/commons/csv/CSVFormat;=[1987,1988
];;withIgnoreSurroundingSpaces()Lorg/apache/commons/csv/CSVFormat;=[2026,2027
];;withIgnoreSurroundingSpaces(Z)Lorg/apache/commons/csv/CSVFormat;=[2038,2039
];;withQuote(C)Lorg/apache/commons/csv/CSVFormat;=[2072,2073
];;withQuote(Ljava/lang/Character;)Lorg/apache/commons/csv/CSVFormat;=[2085,2086
2086,2089
];;withQuoteMode(Lorg/apache/commons/csv/QuoteMode;)Lorg/apache/commons/csv/CSVFormat;=[2102,2103
];;equals(Ljava/lang/Object;)Z=[792,793
793,796
796,799
799,803
803,804
804,807
807,810
810,814
814,817
817,821
821,824
824,828
828,831
831,832
832,838
838,839
]

testEqualsIgnoreEmptyLines : newFormat(C)Lorg/apache/commons/csv/CSVFormat;=[672,673
];;<init>(CLjava/lang/Character;Lorg/apache/commons/csv/QuoteMode;Ljava/lang/Character;Ljava/lang/Character;ZZLjava/lang/String;Ljava/lang/String;[Ljava/lang/Object;[Ljava/lang/String;ZZZZZZ)V=[781,782
782,783
783,784
784,785
785,786
786,787
787,788
788,789
];;toStringArray([Ljava/lang/Object;)[Ljava/lang/String;=[1587,1588
1588,1589
];;validate()V=[1621,1622
1622,1626
1626,1631
1631,1636
1636,1641
1641,1646
1646,1651
1651,1656
1656,1665
];;isLineBreak(C)Z=[636,637
];;withCommentMarker(C)Lorg/apache/commons/csv/CSVFormat;=[1718,1719
];;withCommentMarker(Ljava/lang/Character;)Lorg/apache/commons/csv/CSVFormat;=[1733,1734
1734,1737
];;isLineBreak(Ljava/lang/Character;)Z=[648,649
];;withEscape(C)Lorg/apache/commons/csv/CSVFormat;=[1769,1770
];;withEscape(Ljava/lang/Character;)Lorg/apache/commons/csv/CSVFormat;=[1782,1783
1783,1786
];;withIgnoreEmptyLines()Lorg/apache/commons/csv/CSVFormat;=[1975,1976
];;withIgnoreEmptyLines(Z)Lorg/apache/commons/csv/CSVFormat;=[1987,1988
];;withIgnoreSurroundingSpaces()Lorg/apache/commons/csv/CSVFormat;=[2026,2027
];;withIgnoreSurroundingSpaces(Z)Lorg/apache/commons/csv/CSVFormat;=[2038,2039
];;withQuote(C)Lorg/apache/commons/csv/CSVFormat;=[2072,2073
];;withQuote(Ljava/lang/Character;)Lorg/apache/commons/csv/CSVFormat;=[2085,2086
2086,2089
];;withQuoteMode(Lorg/apache/commons/csv/QuoteMode;)Lorg/apache/commons/csv/CSVFormat;=[2102,2103
];;equals(Ljava/lang/Object;)Z=[792,793
793,796
796,799
799,803
803,804
804,807
807,810
810,814
814,817
817,821
821,824
824,828
828,831
831,832
832,838
838,841
841,844
844,845
]

testEqualsIgnoreSurroundingSpaces : <clinit>()V=[266,267
267,300
300,301
301,302
302,330
330,331
331,332
332,333
333,334
334,361
361,362
362,363
363,364
364,395
395,396
396,397
397,398
398,399
399,400
400,431
431,432
432,433
433,434
434,435
435,436
436,465
465,466
466,467
467,468
468,469
469,470
470,471
471,472
472,503
503,504
504,505
505,506
506,507
507,508
508,509
509,510
510,511
511,541
541,542
542,543
543,544
544,545
545,546
546,547
547,548
548,578
578,579
579,580
580,581
581,582
582,583
583,584
584,585
585,603
603,623
623,624
624,625
625,623
];;<init>(CLjava/lang/Character;Lorg/apache/commons/csv/QuoteMode;Ljava/lang/Character;Ljava/lang/Character;ZZLjava/lang/String;Ljava/lang/String;[Ljava/lang/Object;[Ljava/lang/String;ZZZZZZ)V=[772,773
773,774
774,775
775,776
776,777
777,778
778,779
779,780
780,781
781,782
782,783
783,784
784,785
785,786
786,787
787,788
788,789
];;toStringArray([Ljava/lang/Object;)[Ljava/lang/String;=[1587,1588
1588,1589
];;validate()V=[1621,1622
1622,1626
1626,1631
1631,1636
1636,1641
1641,1646
1646,1651
1651,1656
1656,1665
];;isLineBreak(C)Z=[636,637
];;withIgnoreEmptyLines(Z)Lorg/apache/commons/csv/CSVFormat;=[1987,1988
];;withAllowMissingColumnNames()Lorg/apache/commons/csv/CSVFormat;=[1674,1675
];;withAllowMissingColumnNames(Z)Lorg/apache/commons/csv/CSVFormat;=[1686,1687
];;withDelimiter(C)Lorg/apache/commons/csv/CSVFormat;=[1751,1752
1752,1755
];;withEscape(C)Lorg/apache/commons/csv/CSVFormat;=[1769,1770
];;withEscape(Ljava/lang/Character;)Lorg/apache/commons/csv/CSVFormat;=[1782,1783
1783,1786
];;isLineBreak(Ljava/lang/Character;)Z=[648,649
];;withQuote(Ljava/lang/Character;)Lorg/apache/commons/csv/CSVFormat;=[2085,2086
2086,2089
];;withRecordSeparator(C)Lorg/apache/commons/csv/CSVFormat;=[2121,2122
];;withRecordSeparator(Ljava/lang/String;)Lorg/apache/commons/csv/CSVFormat;=[2140,2141
];;withQuoteMode(Lorg/apache/commons/csv/QuoteMode;)Lorg/apache/commons/csv/CSVFormat;=[2102,2103
];;withSkipHeaderRecord(Z)Lorg/apache/commons/csv/CSVFormat;=[2167,2168
];;withNullString(Ljava/lang/String;)Lorg/apache/commons/csv/CSVFormat;=[2057,2058
];;withTrim()Lorg/apache/commons/csv/CSVFormat;=[2220,2221
];;withTrim(Z)Lorg/apache/commons/csv/CSVFormat;=[2233,2234
];;withSystemRecordSeparator()Lorg/apache/commons/csv/CSVFormat;=[2185,2186
];;withIgnoreSurroundingSpaces()Lorg/apache/commons/csv/CSVFormat;=[2026,2027
];;withIgnoreSurroundingSpaces(Z)Lorg/apache/commons/csv/CSVFormat;=[2038,2039
];;newFormat(C)Lorg/apache/commons/csv/CSVFormat;=[672,673
];;withCommentMarker(C)Lorg/apache/commons/csv/CSVFormat;=[1718,1719
];;withCommentMarker(Ljava/lang/Character;)Lorg/apache/commons/csv/CSVFormat;=[1733,1734
1734,1737
];;withQuote(C)Lorg/apache/commons/csv/CSVFormat;=[2072,2073
]

testEqualsLeftNoQuoteRightQuote : newFormat(C)Lorg/apache/commons/csv/CSVFormat;=[672,673
];;<init>(CLjava/lang/Character;Lorg/apache/commons/csv/QuoteMode;Ljava/lang/Character;Ljava/lang/Character;ZZLjava/lang/String;Ljava/lang/String;[Ljava/lang/Object;[Ljava/lang/String;ZZZZZZ)V=[786,787
787,788
788,789
];;toStringArray([Ljava/lang/Object;)[Ljava/lang/String;=[1587,1588
1588,1589
];;validate()V=[1621,1622
1622,1626
1626,1631
1631,1636
1636,1641
1641,1646
1646,1651
1651,1656
1656,1665
];;isLineBreak(C)Z=[636,637
];;withQuote(Ljava/lang/Character;)Lorg/apache/commons/csv/CSVFormat;=[2085,2086
2086,2089
];;isLineBreak(Ljava/lang/Character;)Z=[648,649
];;withQuote(C)Lorg/apache/commons/csv/CSVFormat;=[2072,2073
];;equals(Ljava/lang/Object;)Z=[792,793
793,796
796,799
799,803
803,804
804,807
807,810
810,811
811,812
810,814
814,815
]

testEqualsNoQuotes : newFormat(C)Lorg/apache/commons/csv/CSVFormat;=[672,673
];;<init>(CLjava/lang/Character;Lorg/apache/commons/csv/QuoteMode;Ljava/lang/Character;Ljava/lang/Character;ZZLjava/lang/String;Ljava/lang/String;[Ljava/lang/Object;[Ljava/lang/String;ZZZZZZ)V=[786,787
787,788
788,789
];;toStringArray([Ljava/lang/Object;)[Ljava/lang/String;=[1587,1588
1588,1589
];;validate()V=[1621,1622
1622,1626
1626,1631
1631,1636
1636,1641
1641,1646
1646,1651
1651,1656
1656,1665
];;isLineBreak(C)Z=[636,637
];;withQuote(Ljava/lang/Character;)Lorg/apache/commons/csv/CSVFormat;=[2085,2086
2086,2089
];;isLineBreak(Ljava/lang/Character;)Z=[648,649
];;equals(Ljava/lang/Object;)Z=[792,793
793,796
796,799
799,803
803,804
804,807
807,810
810,811
811,817
817,818
818,824
824,825
825,831
831,832
832,838
838,841
841,844
844,847
847,850
850,851
851,857
]

testEqualsNullString : newFormat(C)Lorg/apache/commons/csv/CSVFormat;=[672,673
];;<init>(CLjava/lang/Character;Lorg/apache/commons/csv/QuoteMode;Ljava/lang/Character;Ljava/lang/Character;ZZLjava/lang/String;Ljava/lang/String;[Ljava/lang/Object;[Ljava/lang/String;ZZZZZZ)V=[779,780
780,781
781,782
782,783
783,784
784,785
785,786
786,787
787,788
788,789
];;toStringArray([Ljava/lang/Object;)[Ljava/lang/String;=[1587,1588
1588,1589
];;validate()V=[1621,1622
1622,1626
1626,1631
1631,1636
1636,1641
1641,1646
1646,1651
1651,1656
1656,1665
];;isLineBreak(C)Z=[636,637
];;withRecordSeparator(C)Lorg/apache/commons/csv/CSVFormat;=[2121,2122
];;withRecordSeparator(Ljava/lang/String;)Lorg/apache/commons/csv/CSVFormat;=[2140,2141
];;withCommentMarker(C)Lorg/apache/commons/csv/CSVFormat;=[1718,1719
];;withCommentMarker(Ljava/lang/Character;)Lorg/apache/commons/csv/CSVFormat;=[1733,1734
1734,1737
];;isLineBreak(Ljava/lang/Character;)Z=[648,649
];;withEscape(C)Lorg/apache/commons/csv/CSVFormat;=[1769,1770
];;withEscape(Ljava/lang/Character;)Lorg/apache/commons/csv/CSVFormat;=[1782,1783
1783,1786
];;withIgnoreEmptyLines()Lorg/apache/commons/csv/CSVFormat;=[1975,1976
];;withIgnoreEmptyLines(Z)Lorg/apache/commons/csv/CSVFormat;=[1987,1988
];;withIgnoreSurroundingSpaces()Lorg/apache/commons/csv/CSVFormat;=[2026,2027
];;withIgnoreSurroundingSpaces(Z)Lorg/apache/commons/csv/CSVFormat;=[2038,2039
];;withQuote(C)Lorg/apache/commons/csv/CSVFormat;=[2072,2073
];;withQuote(Ljava/lang/Character;)Lorg/apache/commons/csv/CSVFormat;=[2085,2086
2086,2089
];;withQuoteMode(Lorg/apache/commons/csv/QuoteMode;)Lorg/apache/commons/csv/CSVFormat;=[2102,2103
];;withNullString(Ljava/lang/String;)Lorg/apache/commons/csv/CSVFormat;=[2057,2058
];;equals(Ljava/lang/Object;)Z=[792,793
793,796
796,799
799,803
803,804
804,807
807,810
810,814
814,817
817,821
821,824
824,828
828,831
831,835
835,836
]

testEqualsOne : getEscapeCharacter()Ljava/lang/Character;=[921,922
];;getQuoteMode()Lorg/apache/commons/csv/QuoteMode;=[1000,1001
];;getIgnoreEmptyLines()Z=[949,950
];;getSkipHeaderRecord()Z=[1018,1019
];;getIgnoreHeaderCase()Z=[959,960
];;getCommentMarker()Ljava/lang/Character;=[903,904
];;isCommentMarkerSet()Z=[1068,1069
];;isQuoteCharacterSet()Z=[1095,1096
];;getDelimiter()C=[912,913
];;getAllowMissingColumnNames()Z=[884,885
];;isEscapeCharacterSet()Z=[1077,1078
];;getRecordSeparator()Ljava/lang/String;=[1009,1010
];;getQuoteCharacter()Ljava/lang/Character;=[991,992
];;getTrailingDelimiter()Z=[1028,1029
];;getTrim()Z=[1037,1038
];;isNullStringSet()Z=[1086,1087
];;getNullString()Ljava/lang/String;=[982,983
];;getIgnoreSurroundingSpaces()Z=[968,969
];;equals(Ljava/lang/Object;)Z=[792,793
793,796
796,799
799,803
803,804
804,805
]

testEqualsQuoteChar : newFormat(C)Lorg/apache/commons/csv/CSVFormat;=[672,673
];;<init>(CLjava/lang/Character;Lorg/apache/commons/csv/QuoteMode;Ljava/lang/Character;Ljava/lang/Character;ZZLjava/lang/String;Ljava/lang/String;[Ljava/lang/Object;[Ljava/lang/String;ZZZZZZ)V=[786,787
787,788
788,789
];;toStringArray([Ljava/lang/Object;)[Ljava/lang/String;=[1587,1588
1588,1589
];;validate()V=[1621,1622
1622,1626
1626,1631
1631,1636
1636,1641
1641,1646
1646,1651
1651,1656
1656,1665
];;isLineBreak(C)Z=[636,637
];;withQuote(C)Lorg/apache/commons/csv/CSVFormat;=[2072,2073
];;withQuote(Ljava/lang/Character;)Lorg/apache/commons/csv/CSVFormat;=[2085,2086
2086,2089
];;isLineBreak(Ljava/lang/Character;)Z=[648,649
];;equals(Ljava/lang/Object;)Z=[792,793
793,796
796,799
799,803
803,804
804,807
807,810
810,814
814,815
]

testEqualsQuotePolicy : newFormat(C)Lorg/apache/commons/csv/CSVFormat;=[672,673
];;<init>(CLjava/lang/Character;Lorg/apache/commons/csv/QuoteMode;Ljava/lang/Character;Ljava/lang/Character;ZZLjava/lang/String;Ljava/lang/String;[Ljava/lang/Object;[Ljava/lang/String;ZZZZZZ)V=[785,786
786,787
787,788
788,789
];;toStringArray([Ljava/lang/Object;)[Ljava/lang/String;=[1587,1588
1588,1589
];;validate()V=[1621,1622
1622,1626
1626,1631
1631,1636
1636,1641
1641,1646
1646,1651
1651,1656
1656,1665
];;isLineBreak(C)Z=[636,637
];;withQuote(C)Lorg/apache/commons/csv/CSVFormat;=[2072,2073
];;withQuote(Ljava/lang/Character;)Lorg/apache/commons/csv/CSVFormat;=[2085,2086
2086,2089
];;isLineBreak(Ljava/lang/Character;)Z=[648,649
];;withQuoteMode(Lorg/apache/commons/csv/QuoteMode;)Lorg/apache/commons/csv/CSVFormat;=[2102,2103
];;equals(Ljava/lang/Object;)Z=[792,793
793,796
796,799
799,803
803,804
804,807
807,808
]

testEqualsRecordSeparator : newFormat(C)Lorg/apache/commons/csv/CSVFormat;=[672,673
];;<init>(CLjava/lang/Character;Lorg/apache/commons/csv/QuoteMode;Ljava/lang/Character;Ljava/lang/Character;ZZLjava/lang/String;Ljava/lang/String;[Ljava/lang/Object;[Ljava/lang/String;ZZZZZZ)V=[780,781
781,782
782,783
783,784
784,785
785,786
786,787
787,788
788,789
];;toStringArray([Ljava/lang/Object;)[Ljava/lang/String;=[1587,1588
1588,1589
];;validate()V=[1621,1622
1622,1626
1626,1631
1631,1636
1636,1641
1641,1646
1646,1651
1651,1656
1656,1665
];;isLineBreak(C)Z=[636,637
];;withRecordSeparator(C)Lorg/apache/commons/csv/CSVFormat;=[2121,2122
];;withRecordSeparator(Ljava/lang/String;)Lorg/apache/commons/csv/CSVFormat;=[2140,2141
];;withCommentMarker(C)Lorg/apache/commons/csv/CSVFormat;=[1718,1719
];;withCommentMarker(Ljava/lang/Character;)Lorg/apache/commons/csv/CSVFormat;=[1733,1734
1734,1737
];;isLineBreak(Ljava/lang/Character;)Z=[648,649
];;withEscape(C)Lorg/apache/commons/csv/CSVFormat;=[1769,1770
];;withEscape(Ljava/lang/Character;)Lorg/apache/commons/csv/CSVFormat;=[1782,1783
1783,1786
];;withIgnoreEmptyLines()Lorg/apache/commons/csv/CSVFormat;=[1975,1976
];;withIgnoreEmptyLines(Z)Lorg/apache/commons/csv/CSVFormat;=[1987,1988
];;withIgnoreSurroundingSpaces()Lorg/apache/commons/csv/CSVFormat;=[2026,2027
];;withIgnoreSurroundingSpaces(Z)Lorg/apache/commons/csv/CSVFormat;=[2038,2039
];;withQuote(C)Lorg/apache/commons/csv/CSVFormat;=[2072,2073
];;withQuote(Ljava/lang/Character;)Lorg/apache/commons/csv/CSVFormat;=[2085,2086
2086,2089
];;withQuoteMode(Lorg/apache/commons/csv/QuoteMode;)Lorg/apache/commons/csv/CSVFormat;=[2102,2103
];;equals(Ljava/lang/Object;)Z=[792,793
793,796
796,799
799,803
803,804
804,807
807,810
810,814
814,817
817,821
821,824
824,828
828,831
831,832
832,838
838,841
841,844
844,847
847,850
850,854
854,855
]

testEqualsSkipHeaderRecord : newFormat(C)Lorg/apache/commons/csv/CSVFormat;=[672,673
];;<init>(CLjava/lang/Character;Lorg/apache/commons/csv/QuoteMode;Ljava/lang/Character;Ljava/lang/Character;ZZLjava/lang/String;Ljava/lang/String;[Ljava/lang/Object;[Ljava/lang/String;ZZZZZZ)V=[778,779
779,780
780,781
781,782
782,783
783,784
784,785
785,786
786,787
787,788
788,789
];;toStringArray([Ljava/lang/Object;)[Ljava/lang/String;=[1587,1588
1588,1589
];;validate()V=[1621,1622
1622,1626
1626,1631
1631,1636
1636,1641
1641,1646
1646,1651
1651,1656
1656,1665
];;isLineBreak(C)Z=[636,637
];;withRecordSeparator(C)Lorg/apache/commons/csv/CSVFormat;=[2121,2122
];;withRecordSeparator(Ljava/lang/String;)Lorg/apache/commons/csv/CSVFormat;=[2140,2141
];;withCommentMarker(C)Lorg/apache/commons/csv/CSVFormat;=[1718,1719
];;withCommentMarker(Ljava/lang/Character;)Lorg/apache/commons/csv/CSVFormat;=[1733,1734
1734,1737
];;isLineBreak(Ljava/lang/Character;)Z=[648,649
];;withEscape(C)Lorg/apache/commons/csv/CSVFormat;=[1769,1770
];;withEscape(Ljava/lang/Character;)Lorg/apache/commons/csv/CSVFormat;=[1782,1783
1783,1786
];;withIgnoreEmptyLines()Lorg/apache/commons/csv/CSVFormat;=[1975,1976
];;withIgnoreEmptyLines(Z)Lorg/apache/commons/csv/CSVFormat;=[1987,1988
];;withIgnoreSurroundingSpaces()Lorg/apache/commons/csv/CSVFormat;=[2026,2027
];;withIgnoreSurroundingSpaces(Z)Lorg/apache/commons/csv/CSVFormat;=[2038,2039
];;withQuote(C)Lorg/apache/commons/csv/CSVFormat;=[2072,2073
];;withQuote(Ljava/lang/Character;)Lorg/apache/commons/csv/CSVFormat;=[2085,2086
2086,2089
];;withQuoteMode(Lorg/apache/commons/csv/QuoteMode;)Lorg/apache/commons/csv/CSVFormat;=[2102,2103
];;withNullString(Ljava/lang/String;)Lorg/apache/commons/csv/CSVFormat;=[2057,2058
];;withSkipHeaderRecord()Lorg/apache/commons/csv/CSVFormat;=[2154,2155
];;withSkipHeaderRecord(Z)Lorg/apache/commons/csv/CSVFormat;=[2167,2168
];;equals(Ljava/lang/Object;)Z=[792,793
793,796
796,799
799,803
803,804
804,807
807,810
810,814
814,817
817,821
821,824
824,828
828,831
831,835
835,838
838,841
841,844
844,847
847,848
]

testEqualsWithNull : getEscapeCharacter()Ljava/lang/Character;=[921,922
];;getIgnoreSurroundingSpaces()Z=[968,969
];;getTrailingDelimiter()Z=[1028,1029
];;getTrim()Z=[1037,1038
];;isQuoteCharacterSet()Z=[1095,1096
];;getNullString()Ljava/lang/String;=[982,983
];;getIgnoreHeaderCase()Z=[959,960
];;isEscapeCharacterSet()Z=[1077,1078
];;isCommentMarkerSet()Z=[1068,1069
];;getCommentMarker()Ljava/lang/Character;=[903,904
];;getAllowMissingColumnNames()Z=[884,885
];;getQuoteMode()Lorg/apache/commons/csv/QuoteMode;=[1000,1001
];;getDelimiter()C=[912,913
];;getSkipHeaderRecord()Z=[1018,1019
];;getRecordSeparator()Ljava/lang/String;=[1009,1010
];;getIgnoreEmptyLines()Z=[949,950
];;getQuoteCharacter()Ljava/lang/Character;=[991,992
];;isNullStringSet()Z=[1086,1087
];;equals(Ljava/lang/Object;)Z=[792,793
793,796
796,797
]

testEscapeSameAsCommentStartThrowsException : withEscape(C)Lorg/apache/commons/csv/CSVFormat;=[1769,1770
];;withEscape(Ljava/lang/Character;)Lorg/apache/commons/csv/CSVFormat;=[1782,1783
1783,1786
];;isLineBreak(Ljava/lang/Character;)Z=[648,649
];;isLineBreak(C)Z=[636,637
];;<init>(CLjava/lang/Character;Lorg/apache/commons/csv/QuoteMode;Ljava/lang/Character;Ljava/lang/Character;ZZLjava/lang/String;Ljava/lang/String;[Ljava/lang/Object;[Ljava/lang/String;ZZZZZZ)V=[786,787
787,788
];;toStringArray([Ljava/lang/Object;)[Ljava/lang/String;=[1587,1588
1588,1589
];;validate()V=[1621,1622
1622,1626
1626,1631
1631,1636
1636,1641
1641,1646
1646,1651
1651,1656
1656,1665
1646,1647
];;withCommentMarker(C)Lorg/apache/commons/csv/CSVFormat;=[1718,1719
];;withCommentMarker(Ljava/lang/Character;)Lorg/apache/commons/csv/CSVFormat;=[1733,1734
1734,1737
]

testEscapeSameAsCommentStartThrowsExceptionForWrapperType : withEscape(Ljava/lang/Character;)Lorg/apache/commons/csv/CSVFormat;=[1782,1783
1783,1786
];;isLineBreak(Ljava/lang/Character;)Z=[648,649
];;isLineBreak(C)Z=[636,637
];;<init>(CLjava/lang/Character;Lorg/apache/commons/csv/QuoteMode;Ljava/lang/Character;Ljava/lang/Character;ZZLjava/lang/String;Ljava/lang/String;[Ljava/lang/Object;[Ljava/lang/String;ZZZZZZ)V=[786,787
787,788
];;toStringArray([Ljava/lang/Object;)[Ljava/lang/String;=[1587,1588
1588,1589
];;validate()V=[1621,1622
1622,1626
1626,1631
1631,1636
1636,1641
1641,1646
1646,1651
1651,1656
1656,1665
1646,1647
];;withCommentMarker(Ljava/lang/Character;)Lorg/apache/commons/csv/CSVFormat;=[1733,1734
1734,1737
]

testFormat : format([Ljava/lang/Object;)Ljava/lang/String;=[867,868
868,869
869,870
870,871
871,872
872,871
];;getHeaderComments()[Ljava/lang/String;=[939,940
];;getHeader()[Ljava/lang/String;=[930,931
];;printRecord(Ljava/lang/Appendable;[Ljava/lang/Object;)V=[1305,1306
1306,1309
1309,1310
1306,1307
];;println(Ljava/lang/Appendable;)V=[1279,1280
1280,1283
1283,1284
1284,1286
];;getTrailingDelimiter()Z=[1028,1029
];;getAutoFlush()Z=[894,895
];;print(Ljava/lang/Object;Ljava/lang/Appendable;Z)V=[1172,1173
1173,1185
1185,1186
1186,1194
1194,1195
1195,1196
];;getTrim()Z=[1037,1038
];;print(Ljava/lang/Object;Ljava/lang/CharSequence;Ljava/lang/Appendable;Z)V=[1199,1200
1200,1201
1201,1202
1202,1205
1205,1207
1207,1209
1209,1215
1202,1203
1203,1205
];;isQuoteCharacterSet()Z=[1095,1096
];;printWithQuotes(Ljava/lang/Object;Ljava/lang/CharSequence;Ljava/lang/Appendable;Z)V=[1393,1394
1394,1395
1395,1396
1396,1397
1397,1398
1398,1400
1400,1401
1401,1403
1403,1404
1404,1405
1405,1407
1407,1420
1420,1429
1429,1431
1431,1437
1437,1438
1438,1439
1439,1443
1443,1437
1437,1446
1446,1447
1447,1448
1448,1451
1451,1458
1458,1460
1460,1461
1439,1440
1440,1441
1441,1446
1446,1458
1458,1468
1468,1475
1475,1479
1479,1480
1480,1481
1481,1490
1490,1491
1491,1479
1479,1494
1494,1495
1495,1496
];;getDelimiter()C=[912,913
];;getQuoteCharacter()Ljava/lang/Character;=[991,992
];;getQuoteMode()Lorg/apache/commons/csv/QuoteMode;=[1000,1001
];;<clinit>()V=[1406,1407
]

testFormatThrowsNullPointerException : format([Ljava/lang/Object;)Ljava/lang/String;=[867,868
868,869
869,870
870,869
869,872
];;getHeaderComments()[Ljava/lang/String;=[939,940
];;getHeader()[Ljava/lang/String;=[930,931
];;printRecord(Ljava/lang/Appendable;[Ljava/lang/Object;)V=[1305,1306
];;getAutoFlush()Z=[894,895
]

testGetHeader : withHeader([Ljava/lang/String;)Lorg/apache/commons/csv/CSVFormat;=[1941,1942
];;<init>(CLjava/lang/Character;Lorg/apache/commons/csv/QuoteMode;Ljava/lang/Character;Ljava/lang/Character;ZZLjava/lang/String;Ljava/lang/String;[Ljava/lang/Object;[Ljava/lang/String;ZZZZZZ)V=[788,789
];;toStringArray([Ljava/lang/Object;)[Ljava/lang/String;=[1587,1588
1588,1589
];;validate()V=[1621,1622
1622,1626
1626,1631
1631,1636
1636,1641
1641,1646
1646,1651
1651,1656
1656,1657
1657,1658
1658,1659
1659,1658
1658,1665
];;isLineBreak(C)Z=[636,637
];;getHeader()[Ljava/lang/String;=[930,931
]

testHashCodeAndWithIgnoreHeaderCase : withIgnoreHeaderCase()Lorg/apache/commons/csv/CSVFormat;=[2000,2001
];;withIgnoreHeaderCase(Z)Lorg/apache/commons/csv/CSVFormat;=[2013,2014
];;<init>(CLjava/lang/Character;Lorg/apache/commons/csv/QuoteMode;Ljava/lang/Character;Ljava/lang/Character;ZZLjava/lang/String;Ljava/lang/String;[Ljava/lang/Object;[Ljava/lang/String;ZZZZZZ)V=[788,789
];;toStringArray([Ljava/lang/Object;)[Ljava/lang/String;=[1587,1588
1588,1589
];;validate()V=[1621,1622
1622,1626
1626,1631
1631,1636
1636,1641
1641,1646
1646,1651
1651,1656
1656,1665
];;isLineBreak(C)Z=[636,637
];;hashCode()I=[1042,1043
1043,1044
1044,1046
1046,1047
1047,1048
1048,1049
1049,1050
1050,1051
1051,1052
1052,1053
1053,1054
1054,1055
1055,1056
1056,1057
1057,1058
];;getIgnoreHeaderCase()Z=[959,960
];;getTrailingDelimiter()Z=[1028,1029
];;equals(Ljava/lang/Object;)Z=[792,793
793,796
796,799
799,803
803,804
804,807
807,810
810,814
814,817
817,818
818,824
824,825
825,831
831,832
832,838
838,841
841,844
844,847
847,850
850,854
854,857
];;getAllowMissingColumnNames()Z=[884,885
];;getTrim()Z=[1037,1038
]

testNewFormat : newFormat(C)Lorg/apache/commons/csv/CSVFormat;=[672,673
];;<init>(CLjava/lang/Character;Lorg/apache/commons/csv/QuoteMode;Ljava/lang/Character;Ljava/lang/Character;ZZLjava/lang/String;Ljava/lang/String;[Ljava/lang/Object;[Ljava/lang/String;ZZZZZZ)V=[788,789
];;toStringArray([Ljava/lang/Object;)[Ljava/lang/String;=[1587,1588
1588,1589
];;validate()V=[1621,1622
1622,1626
1626,1631
1631,1636
1636,1641
1641,1646
1646,1651
1651,1656
1656,1665
];;isLineBreak(C)Z=[636,637
];;getSkipHeaderRecord()Z=[1018,1019
];;isEscapeCharacterSet()Z=[1077,1078
];;getRecordSeparator()Ljava/lang/String;=[1009,1010
];;getQuoteMode()Lorg/apache/commons/csv/QuoteMode;=[1000,1001
];;getCommentMarker()Ljava/lang/Character;=[903,904
];;getIgnoreHeaderCase()Z=[959,960
];;getAllowMissingColumnNames()Z=[884,885
];;getTrim()Z=[1037,1038
];;isNullStringSet()Z=[1086,1087
];;getEscapeCharacter()Ljava/lang/Character;=[921,922
];;getIgnoreSurroundingSpaces()Z=[968,969
];;getTrailingDelimiter()Z=[1028,1029
];;getDelimiter()C=[912,913
];;getNullString()Ljava/lang/String;=[982,983
];;isQuoteCharacterSet()Z=[1095,1096
];;isCommentMarkerSet()Z=[1068,1069
];;getQuoteCharacter()Ljava/lang/Character;=[991,992
];;getIgnoreEmptyLines()Z=[949,950
]

testNullRecordSeparatorCsv106 : newFormat(C)Lorg/apache/commons/csv/CSVFormat;=[672,673
];;<init>(CLjava/lang/Character;Lorg/apache/commons/csv/QuoteMode;Ljava/lang/Character;Ljava/lang/Character;ZZLjava/lang/String;Ljava/lang/String;[Ljava/lang/Object;[Ljava/lang/String;ZZZZZZ)V=[786,787
787,788
788,789
];;toStringArray([Ljava/lang/Object;)[Ljava/lang/String;=[1587,1588
1588,1589
];;validate()V=[1621,1622
1622,1626
1626,1631
1631,1636
1636,1641
1641,1646
1646,1651
1651,1656
1656,1665
1656,1657
1657,1658
1658,1659
1659,1658
1658,1665
];;isLineBreak(C)Z=[636,637
];;withSkipHeaderRecord()Lorg/apache/commons/csv/CSVFormat;=[2154,2155
];;withSkipHeaderRecord(Z)Lorg/apache/commons/csv/CSVFormat;=[2167,2168
];;withHeader([Ljava/lang/String;)Lorg/apache/commons/csv/CSVFormat;=[1941,1942
];;format([Ljava/lang/Object;)Ljava/lang/String;=[867,868
868,869
869,870
870,871
871,872
872,871
];;getHeaderComments()[Ljava/lang/String;=[939,940
];;getHeader()[Ljava/lang/String;=[930,931
];;getSkipHeaderRecord()Z=[1018,1019
];;printRecord(Ljava/lang/Appendable;[Ljava/lang/Object;)V=[1305,1306
1306,1307
1306,1309
1309,1310
];;print(Ljava/lang/Object;Ljava/lang/Appendable;Z)V=[1172,1173
1173,1185
1185,1186
1186,1194
1194,1195
1195,1196
];;getTrim()Z=[1037,1038
];;print(Ljava/lang/Object;Ljava/lang/CharSequence;Ljava/lang/Appendable;Z)V=[1199,1200
1200,1201
1201,1202
1202,1205
1205,1207
1207,1210
1210,1213
1213,1215
1202,1203
1203,1205
];;isQuoteCharacterSet()Z=[1095,1096
];;isEscapeCharacterSet()Z=[1077,1078
];;getDelimiter()C=[912,913
];;println(Ljava/lang/Appendable;)V=[1279,1280
1280,1283
1283,1286
];;getTrailingDelimiter()Z=[1028,1029
];;getAutoFlush()Z=[894,895
]

testQuoteCharSameAsCommentStartThrowsException : withQuote(C)Lorg/apache/commons/csv/CSVFormat;=[2072,2073
];;withQuote(Ljava/lang/Character;)Lorg/apache/commons/csv/CSVFormat;=[2085,2086
2086,2089
];;isLineBreak(Ljava/lang/Character;)Z=[648,649
];;isLineBreak(C)Z=[636,637
];;<init>(CLjava/lang/Character;Lorg/apache/commons/csv/QuoteMode;Ljava/lang/Character;Ljava/lang/Character;ZZLjava/lang/String;Ljava/lang/String;[Ljava/lang/Object;[Ljava/lang/String;ZZZZZZ)V=[786,787
787,788
];;toStringArray([Ljava/lang/Object;)[Ljava/lang/String;=[1587,1588
1588,1589
];;validate()V=[1621,1622
1622,1626
1626,1631
1631,1636
1636,1641
1641,1646
1646,1651
1651,1656
1656,1665
1641,1642
];;withCommentMarker(C)Lorg/apache/commons/csv/CSVFormat;=[1718,1719
];;withCommentMarker(Ljava/lang/Character;)Lorg/apache/commons/csv/CSVFormat;=[1733,1734
1734,1737
]

testQuoteCharSameAsCommentStartThrowsExceptionForWrapperType : withQuote(Ljava/lang/Character;)Lorg/apache/commons/csv/CSVFormat;=[2085,2086
2086,2089
];;isLineBreak(Ljava/lang/Character;)Z=[648,649
];;isLineBreak(C)Z=[636,637
];;<init>(CLjava/lang/Character;Lorg/apache/commons/csv/QuoteMode;Ljava/lang/Character;Ljava/lang/Character;ZZLjava/lang/String;Ljava/lang/String;[Ljava/lang/Object;[Ljava/lang/String;ZZZZZZ)V=[786,787
787,788
];;toStringArray([Ljava/lang/Object;)[Ljava/lang/String;=[1587,1588
1588,1589
];;validate()V=[1621,1622
1622,1626
1626,1631
1631,1636
1636,1641
1641,1646
1646,1651
1651,1656
1656,1665
1641,1642
];;withCommentMarker(C)Lorg/apache/commons/csv/CSVFormat;=[1718,1719
];;withCommentMarker(Ljava/lang/Character;)Lorg/apache/commons/csv/CSVFormat;=[1733,1734
1734,1737
]

testQuoteCharSameAsDelimiterThrowsException : withQuote(C)Lorg/apache/commons/csv/CSVFormat;=[2072,2073
];;withQuote(Ljava/lang/Character;)Lorg/apache/commons/csv/CSVFormat;=[2085,2086
2086,2089
];;isLineBreak(Ljava/lang/Character;)Z=[648,649
];;isLineBreak(C)Z=[636,637
];;<init>(CLjava/lang/Character;Lorg/apache/commons/csv/QuoteMode;Ljava/lang/Character;Ljava/lang/Character;ZZLjava/lang/String;Ljava/lang/String;[Ljava/lang/Object;[Ljava/lang/String;ZZZZZZ)V=[786,787
787,788
];;toStringArray([Ljava/lang/Object;)[Ljava/lang/String;=[1587,1588
1588,1589
];;validate()V=[1621,1622
1622,1626
1626,1631
1631,1636
1636,1641
1641,1646
1646,1651
1651,1656
1656,1665
1626,1627
];;withDelimiter(C)Lorg/apache/commons/csv/CSVFormat;=[1751,1752
1752,1755
]

testQuotePolicyNoneWithoutEscapeThrowsException : newFormat(C)Lorg/apache/commons/csv/CSVFormat;=[672,673
];;<init>(CLjava/lang/Character;Lorg/apache/commons/csv/QuoteMode;Ljava/lang/Character;Ljava/lang/Character;ZZLjava/lang/String;Ljava/lang/String;[Ljava/lang/Object;[Ljava/lang/String;ZZZZZZ)V=[786,787
787,788
];;toStringArray([Ljava/lang/Object;)[Ljava/lang/String;=[1587,1588
1588,1589
];;validate()V=[1621,1622
1622,1626
1626,1631
1631,1636
1636,1641
1641,1646
1646,1651
1651,1656
1656,1665
1651,1652
];;isLineBreak(C)Z=[636,637
];;withQuoteMode(Lorg/apache/commons/csv/QuoteMode;)Lorg/apache/commons/csv/CSVFormat;=[2102,2103
]

testRFC4180 : getCommentMarker()Ljava/lang/Character;=[903,904
];;getDelimiter()C=[912,913
];;getEscapeCharacter()Ljava/lang/Character;=[921,922
];;getIgnoreEmptyLines()Z=[949,950
];;getQuoteCharacter()Ljava/lang/Character;=[991,992
];;getQuoteMode()Lorg/apache/commons/csv/QuoteMode;=[1000,1001
];;getRecordSeparator()Ljava/lang/String;=[1009,1010
]

testToString : toString()Ljava/lang/String;=[1543,1544
1544,1545
1545,1546
1546,1547
1547,1548
1548,1550
1550,1551
1551,1552
1552,1554
1554,1558
1558,1562
1562,1563
1563,1564
1564,1566
1566,1567
1567,1569
1569,1572
1572,1575
1575,1576
1576,1580
1580,1584
];;isEscapeCharacterSet()Z=[1077,1078
];;isQuoteCharacterSet()Z=[1095,1096
];;isCommentMarkerSet()Z=[1068,1069
];;isNullStringSet()Z=[1086,1087
];;getIgnoreEmptyLines()Z=[949,950
];;getIgnoreSurroundingSpaces()Z=[968,969
];;getIgnoreHeaderCase()Z=[959,960
]

testToStringAndWithCommentMarkerTakingCharacter : <clinit>()V=[173,174
174,179
179,185
185,191
191,197
197,203
203,208
208,213
213,219
219,224
224,229
229,234
234,169
];;<init>(Ljava/lang/String;ILorg/apache/commons/csv/CSVFormat;)V=[237,238
238,239
239,240
];;getFormat()Lorg/apache/commons/csv/CSVFormat;=[247,248
];;getEscapeCharacter()Ljava/lang/Character;=[921,922
];;isQuoteCharacterSet()Z=[1095,1096
];;getTrim()Z=[1037,1038
];;getIgnoreSurroundingSpaces()Z=[968,969
];;getTrailingDelimiter()Z=[1028,1029
];;getDelimiter()C=[912,913
];;getIgnoreHeaderCase()Z=[959,960
];;getRecordSeparator()Ljava/lang/String;=[1009,1010
];;isCommentMarkerSet()Z=[1068,1069
];;getCommentMarker()Ljava/lang/Character;=[903,904
];;isNullStringSet()Z=[1086,1087
];;getAllowMissingColumnNames()Z=[884,885
];;isEscapeCharacterSet()Z=[1077,1078
];;getSkipHeaderRecord()Z=[1018,1019
];;getNullString()Ljava/lang/String;=[982,983
];;getQuoteMode()Lorg/apache/commons/csv/QuoteMode;=[1000,1001
];;getIgnoreEmptyLines()Z=[949,950
];;getQuoteCharacter()Ljava/lang/Character;=[991,992
];;withCommentMarker(Ljava/lang/Character;)Lorg/apache/commons/csv/CSVFormat;=[1733,1734
1734,1737
];;isLineBreak(Ljava/lang/Character;)Z=[648,649
];;isLineBreak(C)Z=[636,637
];;<init>(CLjava/lang/Character;Lorg/apache/commons/csv/QuoteMode;Ljava/lang/Character;Ljava/lang/Character;ZZLjava/lang/String;Ljava/lang/String;[Ljava/lang/Object;[Ljava/lang/String;ZZZZZZ)V=[788,789
];;toStringArray([Ljava/lang/Object;)[Ljava/lang/String;=[1587,1588
1588,1589
];;validate()V=[1621,1622
1622,1626
1626,1631
1631,1636
1636,1641
1641,1646
1646,1651
1651,1656
1656,1665
];;equals(Ljava/lang/Object;)Z=[792,793
793,796
796,799
799,803
803,804
804,807
807,810
810,814
814,817
817,821
821,822
817,818
818,819
];;toString()Ljava/lang/String;=[1543,1544
1544,1545
1545,1546
1546,1550
1550,1551
1551,1552
1552,1554
1554,1555
1555,1556
1556,1558
1558,1562
1562,1563
1563,1564
1564,1566
1566,1567
1567,1569
1569,1572
1572,1575
1575,1576
1576,1580
1580,1584
]

testWithCommentStart : withCommentMarker(C)Lorg/apache/commons/csv/CSVFormat;=[1718,1719
];;withCommentMarker(Ljava/lang/Character;)Lorg/apache/commons/csv/CSVFormat;=[1733,1734
1734,1737
];;isLineBreak(Ljava/lang/Character;)Z=[648,649
];;isLineBreak(C)Z=[636,637
];;<init>(CLjava/lang/Character;Lorg/apache/commons/csv/QuoteMode;Ljava/lang/Character;Ljava/lang/Character;ZZLjava/lang/String;Ljava/lang/String;[Ljava/lang/Object;[Ljava/lang/String;ZZZZZZ)V=[788,789
];;toStringArray([Ljava/lang/Object;)[Ljava/lang/String;=[1587,1588
1588,1589
];;validate()V=[1621,1622
1622,1626
1626,1631
1631,1636
1636,1641
1641,1646
1646,1651
1651,1656
1656,1665
];;getCommentMarker()Ljava/lang/Character;=[903,904
]

testWithCommentStartCRThrowsException : withCommentMarker(C)Lorg/apache/commons/csv/CSVFormat;=[1718,1719
];;withCommentMarker(Ljava/lang/Character;)Lorg/apache/commons/csv/CSVFormat;=[1733,1734
1734,1735
];;isLineBreak(Ljava/lang/Character;)Z=[648,649
];;isLineBreak(C)Z=[636,637
]

testWithDelimiter : withDelimiter(C)Lorg/apache/commons/csv/CSVFormat;=[1751,1752
1752,1755
];;isLineBreak(C)Z=[636,637
];;<init>(CLjava/lang/Character;Lorg/apache/commons/csv/QuoteMode;Ljava/lang/Character;Ljava/lang/Character;ZZLjava/lang/String;Ljava/lang/String;[Ljava/lang/Object;[Ljava/lang/String;ZZZZZZ)V=[788,789
];;toStringArray([Ljava/lang/Object;)[Ljava/lang/String;=[1587,1588
1588,1589
];;validate()V=[1621,1622
1622,1626
1626,1631
1631,1636
1636,1641
1641,1646
1646,1651
1651,1656
1656,1665
];;getDelimiter()C=[912,913
]

testWithDelimiterLFThrowsException : withDelimiter(C)Lorg/apache/commons/csv/CSVFormat;=[1751,1752
1752,1753
];;isLineBreak(C)Z=[636,637
]

testWithEmptyEnum : withHeader(Ljava/lang/Class;)Lorg/apache/commons/csv/CSVFormat;=[1838,1839
1839,1840
1840,1841
]

testWithEscape : withEscape(C)Lorg/apache/commons/csv/CSVFormat;=[1769,1770
];;withEscape(Ljava/lang/Character;)Lorg/apache/commons/csv/CSVFormat;=[1782,1783
1783,1786
];;isLineBreak(Ljava/lang/Character;)Z=[648,649
];;isLineBreak(C)Z=[636,637
];;<init>(CLjava/lang/Character;Lorg/apache/commons/csv/QuoteMode;Ljava/lang/Character;Ljava/lang/Character;ZZLjava/lang/String;Ljava/lang/String;[Ljava/lang/Object;[Ljava/lang/String;ZZZZZZ)V=[788,789
];;toStringArray([Ljava/lang/Object;)[Ljava/lang/String;=[1587,1588
1588,1589
];;validate()V=[1621,1622
1622,1626
1626,1631
1631,1636
1636,1641
1641,1646
1646,1651
1651,1656
1656,1665
];;getEscapeCharacter()Ljava/lang/Character;=[921,922
]

testWithEscapeCRThrowsExceptions : withEscape(C)Lorg/apache/commons/csv/CSVFormat;=[1769,1770
];;withEscape(Ljava/lang/Character;)Lorg/apache/commons/csv/CSVFormat;=[1782,1783
1783,1784
];;isLineBreak(Ljava/lang/Character;)Z=[648,649
];;isLineBreak(C)Z=[636,637
]

testWithFirstRecordAsHeader : withFirstRecordAsHeader()Lorg/apache/commons/csv/CSVFormat;=[1807,1808
];;withHeader([Ljava/lang/String;)Lorg/apache/commons/csv/CSVFormat;=[1941,1942
];;<init>(CLjava/lang/Character;Lorg/apache/commons/csv/QuoteMode;Ljava/lang/Character;Ljava/lang/Character;ZZLjava/lang/String;Ljava/lang/String;[Ljava/lang/Object;[Ljava/lang/String;ZZZZZZ)V=[787,788
788,789
];;toStringArray([Ljava/lang/Object;)[Ljava/lang/String;=[1587,1588
1588,1589
];;validate()V=[1621,1622
1622,1626
1626,1631
1631,1636
1636,1641
1641,1646
1646,1651
1651,1656
1656,1657
1657,1658
1658,1665
];;isLineBreak(C)Z=[636,637
];;withSkipHeaderRecord()Lorg/apache/commons/csv/CSVFormat;=[2154,2155
];;withSkipHeaderRecord(Z)Lorg/apache/commons/csv/CSVFormat;=[2167,2168
];;getSkipHeaderRecord()Z=[1018,1019
];;getHeader()[Ljava/lang/String;=[930,931
]

testWithHeader : withHeader([Ljava/lang/String;)Lorg/apache/commons/csv/CSVFormat;=[1941,1942
];;<init>(CLjava/lang/Character;Lorg/apache/commons/csv/QuoteMode;Ljava/lang/Character;Ljava/lang/Character;ZZLjava/lang/String;Ljava/lang/String;[Ljava/lang/Object;[Ljava/lang/String;ZZZZZZ)V=[788,789
];;toStringArray([Ljava/lang/Object;)[Ljava/lang/String;=[1587,1588
1588,1589
];;validate()V=[1621,1622
1622,1626
1626,1631
1631,1636
1636,1641
1641,1646
1646,1651
1651,1656
1656,1657
1657,1658
1658,1659
1659,1658
1658,1665
];;isLineBreak(C)Z=[636,637
];;getHeader()[Ljava/lang/String;=[930,931
]

testWithHeaderComments : getQuoteCharacter()Ljava/lang/Character;=[991,992
];;isCommentMarkerSet()Z=[1068,1069
];;isEscapeCharacterSet()Z=[1077,1078
];;isQuoteCharacterSet()Z=[1095,1096
];;getSkipHeaderRecord()Z=[1018,1019
];;getQuoteMode()Lorg/apache/commons/csv/QuoteMode;=[1000,1001
];;getDelimiter()C=[912,913
];;getIgnoreEmptyLines()Z=[949,950
];;getIgnoreHeaderCase()Z=[959,960
];;getCommentMarker()Ljava/lang/Character;=[903,904
];;getRecordSeparator()Ljava/lang/String;=[1009,1010
];;getTrailingDelimiter()Z=[1028,1029
];;getAllowMissingColumnNames()Z=[884,885
];;getTrim()Z=[1037,1038
];;isNullStringSet()Z=[1086,1087
];;getNullString()Ljava/lang/String;=[982,983
];;getIgnoreSurroundingSpaces()Z=[968,969
];;getEscapeCharacter()Ljava/lang/Character;=[921,922
];;withHeaderComments([Ljava/lang/Object;)Lorg/apache/commons/csv/CSVFormat;=[1962,1963
];;<init>(CLjava/lang/Character;Lorg/apache/commons/csv/QuoteMode;Ljava/lang/Character;Ljava/lang/Character;ZZLjava/lang/String;Ljava/lang/String;[Ljava/lang/Object;[Ljava/lang/String;ZZZZZZ)V=[788,789
];;toStringArray([Ljava/lang/Object;)[Ljava/lang/String;=[1587,1588
1588,1591
1591,1592
1592,1593
1593,1594
1594,1592
1592,1596
];;validate()V=[1621,1622
1622,1626
1626,1631
1631,1636
1636,1641
1641,1646
1646,1651
1651,1656
1656,1665
];;isLineBreak(C)Z=[636,637
];;equals(Ljava/lang/Object;)Z=[792,793
793,796
796,799
799,803
803,804
804,807
807,810
810,814
814,817
817,818
818,824
824,825
825,831
831,832
832,838
838,841
841,844
844,847
847,850
850,854
854,857
];;format([Ljava/lang/Object;)Ljava/lang/String;=[867,868
868,869
869,870
870,871
871,872
872,871
];;getHeaderComments()[Ljava/lang/String;=[939,940
];;getHeader()[Ljava/lang/String;=[930,931
];;printRecord(Ljava/lang/Appendable;[Ljava/lang/Object;)V=[1305,1306
1306,1307
1306,1309
1309,1310
];;print(Ljava/lang/Object;Ljava/lang/Appendable;Z)V=[1172,1173
1173,1175
1175,1176
1176,1194
1194,1195
1195,1196
];;print(Ljava/lang/Object;Ljava/lang/CharSequence;Ljava/lang/Appendable;Z)V=[1199,1200
1200,1201
1201,1202
1202,1205
1205,1206
1206,1215
1202,1203
1203,1205
];;println(Ljava/lang/Appendable;)V=[1279,1280
1280,1283
1283,1284
1284,1286
];;getAutoFlush()Z=[894,895
]

testWithHeaderEnum : withHeader(Ljava/lang/Class;)Lorg/apache/commons/csv/CSVFormat;=[1838,1839
1839,1840
1840,1841
1841,1842
1842,1843
1843,1844
1844,1843
1843,1847
];;withHeader([Ljava/lang/String;)Lorg/apache/commons/csv/CSVFormat;=[1941,1942
];;<init>(CLjava/lang/Character;Lorg/apache/commons/csv/QuoteMode;Ljava/lang/Character;Ljava/lang/Character;ZZLjava/lang/String;Ljava/lang/String;[Ljava/lang/Object;[Ljava/lang/String;ZZZZZZ)V=[788,789
];;toStringArray([Ljava/lang/Object;)[Ljava/lang/String;=[1587,1588
1588,1589
];;validate()V=[1621,1622
1622,1626
1626,1631
1631,1636
1636,1641
1641,1646
1646,1651
1651,1656
1656,1657
1657,1658
1658,1659
1659,1658
1658,1665
];;isLineBreak(C)Z=[636,637
];;getHeader()[Ljava/lang/String;=[930,931
]

testWithIgnoreEmptyLines : withIgnoreEmptyLines(Z)Lorg/apache/commons/csv/CSVFormat;=[1987,1988
];;<init>(CLjava/lang/Character;Lorg/apache/commons/csv/QuoteMode;Ljava/lang/Character;Ljava/lang/Character;ZZLjava/lang/String;Ljava/lang/String;[Ljava/lang/Object;[Ljava/lang/String;ZZZZZZ)V=[787,788
788,789
];;toStringArray([Ljava/lang/Object;)[Ljava/lang/String;=[1587,1588
1588,1589
];;validate()V=[1621,1622
1622,1626
1626,1631
1631,1636
1636,1641
1641,1646
1646,1651
1651,1656
1656,1665
];;isLineBreak(C)Z=[636,637
];;getIgnoreEmptyLines()Z=[949,950
];;withIgnoreEmptyLines()Lorg/apache/commons/csv/CSVFormat;=[1975,1976
]

testWithIgnoreSurround : withIgnoreSurroundingSpaces(Z)Lorg/apache/commons/csv/CSVFormat;=[2038,2039
];;<init>(CLjava/lang/Character;Lorg/apache/commons/csv/QuoteMode;Ljava/lang/Character;Ljava/lang/Character;ZZLjava/lang/String;Ljava/lang/String;[Ljava/lang/Object;[Ljava/lang/String;ZZZZZZ)V=[787,788
788,789
];;toStringArray([Ljava/lang/Object;)[Ljava/lang/String;=[1587,1588
1588,1589
];;validate()V=[1621,1622
1622,1626
1626,1631
1631,1636
1636,1641
1641,1646
1646,1651
1651,1656
1656,1665
];;isLineBreak(C)Z=[636,637
];;getIgnoreSurroundingSpaces()Z=[968,969
];;withIgnoreSurroundingSpaces()Lorg/apache/commons/csv/CSVFormat;=[2026,2027
]

testWithNullString : withNullString(Ljava/lang/String;)Lorg/apache/commons/csv/CSVFormat;=[2057,2058
];;<init>(CLjava/lang/Character;Lorg/apache/commons/csv/QuoteMode;Ljava/lang/Character;Ljava/lang/Character;ZZLjava/lang/String;Ljava/lang/String;[Ljava/lang/Object;[Ljava/lang/String;ZZZZZZ)V=[788,789
];;toStringArray([Ljava/lang/Object;)[Ljava/lang/String;=[1587,1588
1588,1589
];;validate()V=[1621,1622
1622,1626
1626,1631
1631,1636
1636,1641
1641,1646
1646,1651
1651,1656
1656,1665
];;isLineBreak(C)Z=[636,637
];;getNullString()Ljava/lang/String;=[982,983
]

testWithQuoteChar : withQuote(C)Lorg/apache/commons/csv/CSVFormat;=[2072,2073
];;withQuote(Ljava/lang/Character;)Lorg/apache/commons/csv/CSVFormat;=[2085,2086
2086,2089
];;isLineBreak(Ljava/lang/Character;)Z=[648,649
];;isLineBreak(C)Z=[636,637
];;<init>(CLjava/lang/Character;Lorg/apache/commons/csv/QuoteMode;Ljava/lang/Character;Ljava/lang/Character;ZZLjava/lang/String;Ljava/lang/String;[Ljava/lang/Object;[Ljava/lang/String;ZZZZZZ)V=[788,789
];;toStringArray([Ljava/lang/Object;)[Ljava/lang/String;=[1587,1588
1588,1589
];;validate()V=[1621,1622
1622,1626
1626,1631
1631,1636
1636,1641
1641,1646
1646,1651
1651,1656
1656,1665
];;getQuoteCharacter()Ljava/lang/Character;=[991,992
]

testWithQuoteLFThrowsException : withQuote(C)Lorg/apache/commons/csv/CSVFormat;=[2072,2073
];;withQuote(Ljava/lang/Character;)Lorg/apache/commons/csv/CSVFormat;=[2085,2086
2086,2087
];;isLineBreak(Ljava/lang/Character;)Z=[648,649
];;isLineBreak(C)Z=[636,637
]

testWithQuotePolicy : withQuoteMode(Lorg/apache/commons/csv/QuoteMode;)Lorg/apache/commons/csv/CSVFormat;=[2102,2103
];;<init>(CLjava/lang/Character;Lorg/apache/commons/csv/QuoteMode;Ljava/lang/Character;Ljava/lang/Character;ZZLjava/lang/String;Ljava/lang/String;[Ljava/lang/Object;[Ljava/lang/String;ZZZZZZ)V=[788,789
];;toStringArray([Ljava/lang/Object;)[Ljava/lang/String;=[1587,1588
1588,1589
];;validate()V=[1621,1622
1622,1626
1626,1631
1631,1636
1636,1641
1641,1646
1646,1651
1651,1656
1656,1665
];;isLineBreak(C)Z=[636,637
];;getQuoteMode()Lorg/apache/commons/csv/QuoteMode;=[1000,1001
]

testWithRecordSeparatorCR : withRecordSeparator(C)Lorg/apache/commons/csv/CSVFormat;=[2121,2122
];;withRecordSeparator(Ljava/lang/String;)Lorg/apache/commons/csv/CSVFormat;=[2140,2141
];;<init>(CLjava/lang/Character;Lorg/apache/commons/csv/QuoteMode;Ljava/lang/Character;Ljava/lang/Character;ZZLjava/lang/String;Ljava/lang/String;[Ljava/lang/Object;[Ljava/lang/String;ZZZZZZ)V=[788,789
];;toStringArray([Ljava/lang/Object;)[Ljava/lang/String;=[1587,1588
1588,1589
];;validate()V=[1621,1622
1622,1626
1626,1631
1631,1636
1636,1641
1641,1646
1646,1651
1651,1656
1656,1665
];;isLineBreak(C)Z=[636,637
];;getRecordSeparator()Ljava/lang/String;=[1009,1010
]

testWithRecordSeparatorCRLF : withRecordSeparator(Ljava/lang/String;)Lorg/apache/commons/csv/CSVFormat;=[2140,2141
];;<init>(CLjava/lang/Character;Lorg/apache/commons/csv/QuoteMode;Ljava/lang/Character;Ljava/lang/Character;ZZLjava/lang/String;Ljava/lang/String;[Ljava/lang/Object;[Ljava/lang/String;ZZZZZZ)V=[788,789
];;toStringArray([Ljava/lang/Object;)[Ljava/lang/String;=[1587,1588
1588,1589
];;validate()V=[1621,1622
1622,1626
1626,1631
1631,1636
1636,1641
1641,1646
1646,1651
1651,1656
1656,1665
];;isLineBreak(C)Z=[636,637
];;getRecordSeparator()Ljava/lang/String;=[1009,1010
]

testWithRecordSeparatorLF : withRecordSeparator(C)Lorg/apache/commons/csv/CSVFormat;=[2121,2122
];;withRecordSeparator(Ljava/lang/String;)Lorg/apache/commons/csv/CSVFormat;=[2140,2141
];;<init>(CLjava/lang/Character;Lorg/apache/commons/csv/QuoteMode;Ljava/lang/Character;Ljava/lang/Character;ZZLjava/lang/String;Ljava/lang/String;[Ljava/lang/Object;[Ljava/lang/String;ZZZZZZ)V=[788,789
];;toStringArray([Ljava/lang/Object;)[Ljava/lang/String;=[1587,1588
1588,1589
];;validate()V=[1621,1622
1622,1626
1626,1631
1631,1636
1636,1641
1641,1646
1646,1651
1651,1656
1656,1665
];;isLineBreak(C)Z=[636,637
];;getRecordSeparator()Ljava/lang/String;=[1009,1010
]

testWithSystemRecordSeparator : withSystemRecordSeparator()Lorg/apache/commons/csv/CSVFormat;=[2185,2186
];;withRecordSeparator(Ljava/lang/String;)Lorg/apache/commons/csv/CSVFormat;=[2140,2141
];;<init>(CLjava/lang/Character;Lorg/apache/commons/csv/QuoteMode;Ljava/lang/Character;Ljava/lang/Character;ZZLjava/lang/String;Ljava/lang/String;[Ljava/lang/Object;[Ljava/lang/String;ZZZZZZ)V=[788,789
];;toStringArray([Ljava/lang/Object;)[Ljava/lang/String;=[1587,1588
1588,1589
];;validate()V=[1621,1622
1622,1626
1626,1631
1631,1636
1636,1641
1641,1646
1646,1651
1651,1656
1656,1665
];;isLineBreak(C)Z=[636,637
];;getRecordSeparator()Ljava/lang/String;=[1009,1010
]
