1:EVR:<METHOD_INVOCATION(double)>:<DEFAULT>:org.apache.commons.math3.analysis.solvers.NewtonSolver@solve(int,org.apache.commons.math3.analysis.DifferentiableUnivariateFunction,double,double):70:super.solve(maxEval, f, UnivariateSolverUtils.midpoint(min, max)) |==> 0.0
2:EVR:<METHOD_INVOCATION(double)>:<DEFAULT>:org.apache.commons.math3.analysis.solvers.NewtonSolver@doSolve():79:getStartValue() |==> 0.0
3:EVR:<METHOD_INVOCATION(double)>:<DEFAULT>:org.apache.commons.math3.analysis.solvers.NewtonSolver@doSolve():80:getAbsoluteAccuracy() |==> 0.0
4:EVR:<IDENTIFIER(double)>:<DEFAULT>:org.apache.commons.math3.analysis.solvers.NewtonSolver@doSolve():82:startValue |==> 0.0
5:AOR:/(double,double):%(double,double):org.apache.commons.math3.analysis.solvers.NewtonSolver@doSolve():85:computeObjectiveValue(x0) / computeDerivativeObjectiveValue(x0) |==> computeObjectiveValue(x0) % computeDerivativeObjectiveValue(x0)
6:AOR:/(double,double):*(double,double):org.apache.commons.math3.analysis.solvers.NewtonSolver@doSolve():85:computeObjectiveValue(x0) / computeDerivativeObjectiveValue(x0) |==> computeObjectiveValue(x0) * computeDerivativeObjectiveValue(x0)
7:AOR:/(double,double):+(double,double):org.apache.commons.math3.analysis.solvers.NewtonSolver@doSolve():85:computeObjectiveValue(x0) / computeDerivativeObjectiveValue(x0) |==> computeObjectiveValue(x0) + computeDerivativeObjectiveValue(x0)
8:AOR:/(double,double):-(double,double):org.apache.commons.math3.analysis.solvers.NewtonSolver@doSolve():85:computeObjectiveValue(x0) / computeDerivativeObjectiveValue(x0) |==> computeObjectiveValue(x0) - computeDerivativeObjectiveValue(x0)
9:AOR:-(double,double):%(double,double):org.apache.commons.math3.analysis.solvers.NewtonSolver@doSolve():85:x0 - (computeObjectiveValue(x0) / computeDerivativeObjectiveValue(x0)) |==> x0 % (computeObjectiveValue(x0) / computeDerivativeObjectiveValue(x0))
10:AOR:-(double,double):*(double,double):org.apache.commons.math3.analysis.solvers.NewtonSolver@doSolve():85:x0 - (computeObjectiveValue(x0) / computeDerivativeObjectiveValue(x0)) |==> x0 * (computeObjectiveValue(x0) / computeDerivativeObjectiveValue(x0))
11:AOR:-(double,double):+(double,double):org.apache.commons.math3.analysis.solvers.NewtonSolver@doSolve():85:x0 - (computeObjectiveValue(x0) / computeDerivativeObjectiveValue(x0)) |==> x0 + (computeObjectiveValue(x0) / computeDerivativeObjectiveValue(x0))
12:AOR:-(double,double):/(double,double):org.apache.commons.math3.analysis.solvers.NewtonSolver@doSolve():85:x0 - (computeObjectiveValue(x0) / computeDerivativeObjectiveValue(x0)) |==> x0 / (computeObjectiveValue(x0) / computeDerivativeObjectiveValue(x0))
13:AOR:-(double,double):%(double,double):org.apache.commons.math3.analysis.solvers.NewtonSolver@doSolve():86:x1 - x0 |==> x1 % x0
14:AOR:-(double,double):*(double,double):org.apache.commons.math3.analysis.solvers.NewtonSolver@doSolve():86:x1 - x0 |==> x1 * x0
15:AOR:-(double,double):+(double,double):org.apache.commons.math3.analysis.solvers.NewtonSolver@doSolve():86:x1 - x0 |==> x1 + x0
16:AOR:-(double,double):/(double,double):org.apache.commons.math3.analysis.solvers.NewtonSolver@doSolve():86:x1 - x0 |==> x1 / x0
17:ROR:<=(double,double):<(double,double):org.apache.commons.math3.analysis.solvers.NewtonSolver@doSolve():86:FastMath.abs(x1 - x0) <= absoluteAccuracy |==> FastMath.abs(x1 - x0) < absoluteAccuracy
18:ROR:<=(double,double):==(double,double):org.apache.commons.math3.analysis.solvers.NewtonSolver@doSolve():86:FastMath.abs(x1 - x0) <= absoluteAccuracy |==> FastMath.abs(x1 - x0) == absoluteAccuracy
19:ROR:<=(double,double):TRUE(double,double):org.apache.commons.math3.analysis.solvers.NewtonSolver@doSolve():86:FastMath.abs(x1 - x0) <= absoluteAccuracy |==> true
20:STD:<RETURN>:<NO-OP>:org.apache.commons.math3.analysis.solvers.NewtonSolver@doSolve():87:return x1; |==> <NO-OP>
21:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math3.analysis.solvers.NewtonSolver@doSolve():90:x0 = x1 |==> <NO-OP>
