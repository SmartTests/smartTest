1:EVR:<NEW_CLASS(java.util.ArrayList<org.apache.commons.math3.fraction.BigFraction>)>:<DEFAULT>:org.apache.commons.math3.analysis.polynomials.PolynomialsUtils:55:new ArrayList<BigFraction>() |==> null
2:STD:<CALL>:<NO-OP>:org.apache.commons.math3.analysis.polynomials.PolynomialsUtils:56:CHEBYSHEV_COEFFICIENTS.add(BigFraction.ONE) |==> <NO-OP>
3:STD:<CALL>:<NO-OP>:org.apache.commons.math3.analysis.polynomials.PolynomialsUtils:57:CHEBYSHEV_COEFFICIENTS.add(BigFraction.ZERO) |==> <NO-OP>
4:STD:<CALL>:<NO-OP>:org.apache.commons.math3.analysis.polynomials.PolynomialsUtils:58:CHEBYSHEV_COEFFICIENTS.add(BigFraction.ONE) |==> <NO-OP>
5:EVR:<NEW_CLASS(java.util.ArrayList<org.apache.commons.math3.fraction.BigFraction>)>:<DEFAULT>:org.apache.commons.math3.analysis.polynomials.PolynomialsUtils:62:new ArrayList<BigFraction>() |==> null
6:STD:<CALL>:<NO-OP>:org.apache.commons.math3.analysis.polynomials.PolynomialsUtils:63:HERMITE_COEFFICIENTS.add(BigFraction.ONE) |==> <NO-OP>
7:STD:<CALL>:<NO-OP>:org.apache.commons.math3.analysis.polynomials.PolynomialsUtils:64:HERMITE_COEFFICIENTS.add(BigFraction.ZERO) |==> <NO-OP>
8:STD:<CALL>:<NO-OP>:org.apache.commons.math3.analysis.polynomials.PolynomialsUtils:65:HERMITE_COEFFICIENTS.add(BigFraction.TWO) |==> <NO-OP>
9:EVR:<NEW_CLASS(java.util.ArrayList<org.apache.commons.math3.fraction.BigFraction>)>:<DEFAULT>:org.apache.commons.math3.analysis.polynomials.PolynomialsUtils:69:new ArrayList<BigFraction>() |==> null
10:STD:<CALL>:<NO-OP>:org.apache.commons.math3.analysis.polynomials.PolynomialsUtils:70:LAGUERRE_COEFFICIENTS.add(BigFraction.ONE) |==> <NO-OP>
11:STD:<CALL>:<NO-OP>:org.apache.commons.math3.analysis.polynomials.PolynomialsUtils:71:LAGUERRE_COEFFICIENTS.add(BigFraction.ONE) |==> <NO-OP>
12:STD:<CALL>:<NO-OP>:org.apache.commons.math3.analysis.polynomials.PolynomialsUtils:72:LAGUERRE_COEFFICIENTS.add(BigFraction.MINUS_ONE) |==> <NO-OP>
13:EVR:<NEW_CLASS(java.util.ArrayList<org.apache.commons.math3.fraction.BigFraction>)>:<DEFAULT>:org.apache.commons.math3.analysis.polynomials.PolynomialsUtils:76:new ArrayList<BigFraction>() |==> null
14:STD:<CALL>:<NO-OP>:org.apache.commons.math3.analysis.polynomials.PolynomialsUtils:77:LEGENDRE_COEFFICIENTS.add(BigFraction.ONE) |==> <NO-OP>
15:STD:<CALL>:<NO-OP>:org.apache.commons.math3.analysis.polynomials.PolynomialsUtils:78:LEGENDRE_COEFFICIENTS.add(BigFraction.ZERO) |==> <NO-OP>
16:STD:<CALL>:<NO-OP>:org.apache.commons.math3.analysis.polynomials.PolynomialsUtils:79:LEGENDRE_COEFFICIENTS.add(BigFraction.ONE) |==> <NO-OP>
17:EVR:<NEW_CLASS(java.util.HashMap<org.apache.commons.math3.analysis.polynomials.PolynomialsUtils.JacobiKey,java.util.List<org.apache.commons.math3.fraction.BigFraction>>)>:<DEFAULT>:org.apache.commons.math3.analysis.polynomials.PolynomialsUtils:82:new HashMap<JacobiKey, List<BigFraction>>() |==> null
18:EVR:<NEW_ARRAY(org.apache.commons.math3.fraction.BigFraction[])>:<DEFAULT>:org.apache.commons.math3.analysis.polynomials.PolynomialsUtils$1:108:{BigFraction.ZERO, BigFraction.TWO, BigFraction.ONE} |==> null
19:EVR:<IDENTIFIER(org.apache.commons.math3.fraction.BigFraction[])>:<DEFAULT>:org.apache.commons.math3.analysis.polynomials.PolynomialsUtils$1@generate(int):111:coeffs |==> null
20:LVR:POS:0:org.apache.commons.math3.analysis.polynomials.PolynomialsUtils$2@generate(int):138:2 |==> 0
21:LVR:POS:NEG:org.apache.commons.math3.analysis.polynomials.PolynomialsUtils$2@generate(int):138:2 |==> -2
22:AOR:*(int,int):%(int,int):org.apache.commons.math3.analysis.polynomials.PolynomialsUtils$2@generate(int):138:2 * k |==> 2 % k
23:AOR:*(int,int):+(int,int):org.apache.commons.math3.analysis.polynomials.PolynomialsUtils$2@generate(int):138:2 * k |==> 2 + k
24:AOR:*(int,int):-(int,int):org.apache.commons.math3.analysis.polynomials.PolynomialsUtils$2@generate(int):138:2 * k |==> 2 - k
25:AOR:*(int,int):/(int,int):org.apache.commons.math3.analysis.polynomials.PolynomialsUtils$2@generate(int):138:2 * k |==> 2 / k
26:LVR:POS:0:org.apache.commons.math3.analysis.polynomials.PolynomialsUtils$3@generate(int):161:1 |==> 0
27:LVR:POS:NEG:org.apache.commons.math3.analysis.polynomials.PolynomialsUtils$3@generate(int):161:1 |==> -1
28:AOR:+(int,int):%(int,int):org.apache.commons.math3.analysis.polynomials.PolynomialsUtils$3@generate(int):161:k + 1 |==> k % 1
29:AOR:+(int,int):*(int,int):org.apache.commons.math3.analysis.polynomials.PolynomialsUtils$3@generate(int):161:k + 1 |==> k * 1
30:AOR:+(int,int):-(int,int):org.apache.commons.math3.analysis.polynomials.PolynomialsUtils$3@generate(int):161:k + 1 |==> k - 1
31:AOR:+(int,int):/(int,int):org.apache.commons.math3.analysis.polynomials.PolynomialsUtils$3@generate(int):161:k + 1 |==> k / 1
32:LVR:POS:0:org.apache.commons.math3.analysis.polynomials.PolynomialsUtils$3@generate(int):163:2 |==> 0
33:LVR:POS:NEG:org.apache.commons.math3.analysis.polynomials.PolynomialsUtils$3@generate(int):163:2 |==> -2
34:AOR:*(int,int):%(int,int):org.apache.commons.math3.analysis.polynomials.PolynomialsUtils$3@generate(int):163:2 * k |==> 2 % k
35:AOR:*(int,int):+(int,int):org.apache.commons.math3.analysis.polynomials.PolynomialsUtils$3@generate(int):163:2 * k |==> 2 + k
36:AOR:*(int,int):-(int,int):org.apache.commons.math3.analysis.polynomials.PolynomialsUtils$3@generate(int):163:2 * k |==> 2 - k
37:AOR:*(int,int):/(int,int):org.apache.commons.math3.analysis.polynomials.PolynomialsUtils$3@generate(int):163:2 * k |==> 2 / k
38:LVR:POS:0:org.apache.commons.math3.analysis.polynomials.PolynomialsUtils$3@generate(int):163:1 |==> 0
39:LVR:POS:NEG:org.apache.commons.math3.analysis.polynomials.PolynomialsUtils$3@generate(int):163:1 |==> -1
40:AOR:+(int,int):%(int,int):org.apache.commons.math3.analysis.polynomials.PolynomialsUtils$3@generate(int):163:2 * k + 1 |==> 2 * k % 1
41:AOR:+(int,int):*(int,int):org.apache.commons.math3.analysis.polynomials.PolynomialsUtils$3@generate(int):163:2 * k + 1 |==> 2 * k * 1
42:AOR:+(int,int):-(int,int):org.apache.commons.math3.analysis.polynomials.PolynomialsUtils$3@generate(int):163:2 * k + 1 |==> 2 * k - 1
43:AOR:+(int,int):/(int,int):org.apache.commons.math3.analysis.polynomials.PolynomialsUtils$3@generate(int):163:2 * k + 1 |==> 2 * k / 1
44:LVR:NEG:0:org.apache.commons.math3.analysis.polynomials.PolynomialsUtils$3@generate(int):164:-1 |==> 0
45:LVR:NEG:POS:org.apache.commons.math3.analysis.polynomials.PolynomialsUtils$3@generate(int):164:-1 |==> 1
46:LVR:POS:0:org.apache.commons.math3.analysis.polynomials.PolynomialsUtils$4@generate(int):188:1 |==> 0
47:LVR:POS:NEG:org.apache.commons.math3.analysis.polynomials.PolynomialsUtils$4@generate(int):188:1 |==> -1
48:AOR:+(int,int):%(int,int):org.apache.commons.math3.analysis.polynomials.PolynomialsUtils$4@generate(int):188:k + 1 |==> k % 1
49:AOR:+(int,int):*(int,int):org.apache.commons.math3.analysis.polynomials.PolynomialsUtils$4@generate(int):188:k + 1 |==> k * 1
50:AOR:+(int,int):-(int,int):org.apache.commons.math3.analysis.polynomials.PolynomialsUtils$4@generate(int):188:k + 1 |==> k - 1
51:AOR:+(int,int):/(int,int):org.apache.commons.math3.analysis.polynomials.PolynomialsUtils$4@generate(int):188:k + 1 |==> k / 1
52:AOR:+(int,int):%(int,int):org.apache.commons.math3.analysis.polynomials.PolynomialsUtils$4@generate(int):191:k + kP1 |==> k % kP1
53:AOR:+(int,int):*(int,int):org.apache.commons.math3.analysis.polynomials.PolynomialsUtils$4@generate(int):191:k + kP1 |==> k * kP1
54:AOR:+(int,int):-(int,int):org.apache.commons.math3.analysis.polynomials.PolynomialsUtils$4@generate(int):191:k + kP1 |==> k - kP1
55:AOR:+(int,int):/(int,int):org.apache.commons.math3.analysis.polynomials.PolynomialsUtils$4@generate(int):191:k + kP1 |==> k / kP1
56:EVR:<NEW_CLASS(org.apache.commons.math3.analysis.polynomials.PolynomialsUtils.JacobiKey)>:<DEFAULT>:org.apache.commons.math3.analysis.polynomials.PolynomialsUtils@createJacobiPolynomial(int,int,int):217:new JacobiKey(v, w) |==> null
57:COR:JACOBI_COEFFICIENTS.containsKey(key):TRUE:org.apache.commons.math3.analysis.polynomials.PolynomialsUtils@createJacobiPolynomial(int,int,int):219:JACOBI_COEFFICIENTS.containsKey(key) |==> false
58:COR:JACOBI_COEFFICIENTS.containsKey(key):FALSE:org.apache.commons.math3.analysis.polynomials.PolynomialsUtils@createJacobiPolynomial(int,int,int):219:JACOBI_COEFFICIENTS.containsKey(key) |==> true
59:EVR:<NEW_CLASS(java.util.ArrayList<org.apache.commons.math3.fraction.BigFraction>)>:<DEFAULT>:org.apache.commons.math3.analysis.polynomials.PolynomialsUtils@createJacobiPolynomial(int,int,int):222:new ArrayList<BigFraction>() |==> null
60:STD:<CALL>:<NO-OP>:org.apache.commons.math3.analysis.polynomials.PolynomialsUtils@createJacobiPolynomial(int,int,int):223:JACOBI_COEFFICIENTS.put(key, list) |==> <NO-OP>
61:STD:<CALL>:<NO-OP>:org.apache.commons.math3.analysis.polynomials.PolynomialsUtils@createJacobiPolynomial(int,int,int):226:list.add(BigFraction.ONE) |==> <NO-OP>
62:AOR:-(int,int):%(int,int):org.apache.commons.math3.analysis.polynomials.PolynomialsUtils@createJacobiPolynomial(int,int,int):229:v - w |==> v % w
63:AOR:-(int,int):*(int,int):org.apache.commons.math3.analysis.polynomials.PolynomialsUtils@createJacobiPolynomial(int,int,int):229:v - w |==> v * w
64:AOR:-(int,int):+(int,int):org.apache.commons.math3.analysis.polynomials.PolynomialsUtils@createJacobiPolynomial(int,int,int):229:v - w |==> v + w
65:AOR:-(int,int):/(int,int):org.apache.commons.math3.analysis.polynomials.PolynomialsUtils@createJacobiPolynomial(int,int,int):229:v - w |==> v / w
66:LVR:POS:0:org.apache.commons.math3.analysis.polynomials.PolynomialsUtils@createJacobiPolynomial(int,int,int):229:2 |==> 0
67:LVR:POS:NEG:org.apache.commons.math3.analysis.polynomials.PolynomialsUtils@createJacobiPolynomial(int,int,int):229:2 |==> -2
68:STD:<CALL>:<NO-OP>:org.apache.commons.math3.analysis.polynomials.PolynomialsUtils@createJacobiPolynomial(int,int,int):229:list.add(new BigFraction(v - w, 2)) |==> <NO-OP>
69:LVR:POS:0:org.apache.commons.math3.analysis.polynomials.PolynomialsUtils@createJacobiPolynomial(int,int,int):230:2 |==> 0
70:LVR:POS:NEG:org.apache.commons.math3.analysis.polynomials.PolynomialsUtils@createJacobiPolynomial(int,int,int):230:2 |==> -2
71:AOR:+(int,int):%(int,int):org.apache.commons.math3.analysis.polynomials.PolynomialsUtils@createJacobiPolynomial(int,int,int):230:2 + v |==> 2 % v
72:AOR:+(int,int):*(int,int):org.apache.commons.math3.analysis.polynomials.PolynomialsUtils@createJacobiPolynomial(int,int,int):230:2 + v |==> 2 * v
73:AOR:+(int,int):-(int,int):org.apache.commons.math3.analysis.polynomials.PolynomialsUtils@createJacobiPolynomial(int,int,int):230:2 + v |==> 2 - v
74:AOR:+(int,int):/(int,int):org.apache.commons.math3.analysis.polynomials.PolynomialsUtils@createJacobiPolynomial(int,int,int):230:2 + v |==> 2 / v
75:AOR:+(int,int):%(int,int):org.apache.commons.math3.analysis.polynomials.PolynomialsUtils@createJacobiPolynomial(int,int,int):230:2 + v + w |==> (2 + v) % w
76:AOR:+(int,int):*(int,int):org.apache.commons.math3.analysis.polynomials.PolynomialsUtils@createJacobiPolynomial(int,int,int):230:2 + v + w |==> (2 + v) * w
77:AOR:+(int,int):-(int,int):org.apache.commons.math3.analysis.polynomials.PolynomialsUtils@createJacobiPolynomial(int,int,int):230:2 + v + w |==> 2 + v - w
78:AOR:+(int,int):/(int,int):org.apache.commons.math3.analysis.polynomials.PolynomialsUtils@createJacobiPolynomial(int,int,int):230:2 + v + w |==> (2 + v) / w
79:LVR:POS:0:org.apache.commons.math3.analysis.polynomials.PolynomialsUtils@createJacobiPolynomial(int,int,int):230:2 |==> 0
80:LVR:POS:NEG:org.apache.commons.math3.analysis.polynomials.PolynomialsUtils@createJacobiPolynomial(int,int,int):230:2 |==> -2
81:STD:<CALL>:<NO-OP>:org.apache.commons.math3.analysis.polynomials.PolynomialsUtils@createJacobiPolynomial(int,int,int):230:list.add(new BigFraction(2 + v + w, 2)) |==> <NO-OP>
82:STD:<INC>:<NO-OP>:org.apache.commons.math3.analysis.polynomials.PolynomialsUtils$5@generate(int):238:k++ |==> <NO-OP>
83:AOR:+(int,int):%(int,int):org.apache.commons.math3.analysis.polynomials.PolynomialsUtils$5@generate(int):239:k + v |==> k % v
84:AOR:+(int,int):*(int,int):org.apache.commons.math3.analysis.polynomials.PolynomialsUtils$5@generate(int):239:k + v |==> k * v
85:AOR:+(int,int):-(int,int):org.apache.commons.math3.analysis.polynomials.PolynomialsUtils$5@generate(int):239:k + v |==> k - v
86:AOR:+(int,int):/(int,int):org.apache.commons.math3.analysis.polynomials.PolynomialsUtils$5@generate(int):239:k + v |==> k / v
87:AOR:+(int,int):%(int,int):org.apache.commons.math3.analysis.polynomials.PolynomialsUtils$5@generate(int):239:k + v + w |==> (k + v) % w
88:AOR:+(int,int):*(int,int):org.apache.commons.math3.analysis.polynomials.PolynomialsUtils$5@generate(int):239:k + v + w |==> (k + v) * w
89:AOR:+(int,int):-(int,int):org.apache.commons.math3.analysis.polynomials.PolynomialsUtils$5@generate(int):239:k + v + w |==> k + v - w
90:AOR:+(int,int):/(int,int):org.apache.commons.math3.analysis.polynomials.PolynomialsUtils$5@generate(int):239:k + v + w |==> (k + v) / w
91:AOR:+(int,int):%(int,int):org.apache.commons.math3.analysis.polynomials.PolynomialsUtils$5@generate(int):240:kvw + k |==> kvw % k
92:AOR:+(int,int):*(int,int):org.apache.commons.math3.analysis.polynomials.PolynomialsUtils$5@generate(int):240:kvw + k |==> kvw * k
93:AOR:+(int,int):-(int,int):org.apache.commons.math3.analysis.polynomials.PolynomialsUtils$5@generate(int):240:kvw + k |==> kvw - k
94:AOR:+(int,int):/(int,int):org.apache.commons.math3.analysis.polynomials.PolynomialsUtils$5@generate(int):240:kvw + k |==> kvw / k
95:LVR:POS:0:org.apache.commons.math3.analysis.polynomials.PolynomialsUtils$5@generate(int):241:1 |==> 0
96:LVR:POS:NEG:org.apache.commons.math3.analysis.polynomials.PolynomialsUtils$5@generate(int):241:1 |==> -1
97:AOR:-(int,int):%(int,int):org.apache.commons.math3.analysis.polynomials.PolynomialsUtils$5@generate(int):241:twoKvw - 1 |==> twoKvw % 1
98:AOR:-(int,int):*(int,int):org.apache.commons.math3.analysis.polynomials.PolynomialsUtils$5@generate(int):241:twoKvw - 1 |==> twoKvw * 1
99:AOR:-(int,int):+(int,int):org.apache.commons.math3.analysis.polynomials.PolynomialsUtils$5@generate(int):241:twoKvw - 1 |==> twoKvw + 1
100:AOR:-(int,int):/(int,int):org.apache.commons.math3.analysis.polynomials.PolynomialsUtils$5@generate(int):241:twoKvw - 1 |==> twoKvw / 1
101:LVR:POS:0:org.apache.commons.math3.analysis.polynomials.PolynomialsUtils$5@generate(int):242:2 |==> 0
102:LVR:POS:NEG:org.apache.commons.math3.analysis.polynomials.PolynomialsUtils$5@generate(int):242:2 |==> -2
103:AOR:-(int,int):%(int,int):org.apache.commons.math3.analysis.polynomials.PolynomialsUtils$5@generate(int):242:twoKvw - 2 |==> twoKvw % 2
104:AOR:-(int,int):*(int,int):org.apache.commons.math3.analysis.polynomials.PolynomialsUtils$5@generate(int):242:twoKvw - 2 |==> twoKvw * 2
105:AOR:-(int,int):+(int,int):org.apache.commons.math3.analysis.polynomials.PolynomialsUtils$5@generate(int):242:twoKvw - 2 |==> twoKvw + 2
106:AOR:-(int,int):/(int,int):org.apache.commons.math3.analysis.polynomials.PolynomialsUtils$5@generate(int):242:twoKvw - 2 |==> twoKvw / 2
107:LVR:POS:0:org.apache.commons.math3.analysis.polynomials.PolynomialsUtils$5@generate(int):243:2 |==> 0
108:LVR:POS:NEG:org.apache.commons.math3.analysis.polynomials.PolynomialsUtils$5@generate(int):243:2 |==> -2
109:AOR:*(int,int):%(int,int):org.apache.commons.math3.analysis.polynomials.PolynomialsUtils$5@generate(int):243:2 * k |==> 2 % k
110:AOR:*(int,int):+(int,int):org.apache.commons.math3.analysis.polynomials.PolynomialsUtils$5@generate(int):243:2 * k |==> 2 + k
111:AOR:*(int,int):-(int,int):org.apache.commons.math3.analysis.polynomials.PolynomialsUtils$5@generate(int):243:2 * k |==> 2 - k
112:AOR:*(int,int):/(int,int):org.apache.commons.math3.analysis.polynomials.PolynomialsUtils$5@generate(int):243:2 * k |==> 2 / k
113:AOR:*(int,int):%(int,int):org.apache.commons.math3.analysis.polynomials.PolynomialsUtils$5@generate(int):243:2 * k * kvw |==> 2 * k % kvw
114:AOR:*(int,int):+(int,int):org.apache.commons.math3.analysis.polynomials.PolynomialsUtils$5@generate(int):243:2 * k * kvw |==> 2 * k + kvw
115:AOR:*(int,int):-(int,int):org.apache.commons.math3.analysis.polynomials.PolynomialsUtils$5@generate(int):243:2 * k * kvw |==> 2 * k - kvw
116:AOR:*(int,int):/(int,int):org.apache.commons.math3.analysis.polynomials.PolynomialsUtils$5@generate(int):243:2 * k * kvw |==> 2 * k / kvw
117:AOR:*(int,int):%(int,int):org.apache.commons.math3.analysis.polynomials.PolynomialsUtils$5@generate(int):243:2 * k * kvw * twoKvwM2 |==> 2 * k * kvw % twoKvwM2
118:AOR:*(int,int):+(int,int):org.apache.commons.math3.analysis.polynomials.PolynomialsUtils$5@generate(int):243:2 * k * kvw * twoKvwM2 |==> 2 * k * kvw + twoKvwM2
119:AOR:*(int,int):-(int,int):org.apache.commons.math3.analysis.polynomials.PolynomialsUtils$5@generate(int):243:2 * k * kvw * twoKvwM2 |==> 2 * k * kvw - twoKvwM2
120:AOR:*(int,int):/(int,int):org.apache.commons.math3.analysis.polynomials.PolynomialsUtils$5@generate(int):243:2 * k * kvw * twoKvwM2 |==> 2 * k * kvw / twoKvwM2
121:AOR:*(int,int):%(int,int):org.apache.commons.math3.analysis.polynomials.PolynomialsUtils$5@generate(int):246:v * v |==> v % v
122:AOR:*(int,int):+(int,int):org.apache.commons.math3.analysis.polynomials.PolynomialsUtils$5@generate(int):246:v * v |==> v + v
123:AOR:*(int,int):-(int,int):org.apache.commons.math3.analysis.polynomials.PolynomialsUtils$5@generate(int):246:v * v |==> v - v
124:AOR:*(int,int):/(int,int):org.apache.commons.math3.analysis.polynomials.PolynomialsUtils$5@generate(int):246:v * v |==> v / v
125:AOR:*(int,int):%(int,int):org.apache.commons.math3.analysis.polynomials.PolynomialsUtils$5@generate(int):246:w * w |==> w % w
126:AOR:*(int,int):+(int,int):org.apache.commons.math3.analysis.polynomials.PolynomialsUtils$5@generate(int):246:w * w |==> w + w
127:AOR:*(int,int):-(int,int):org.apache.commons.math3.analysis.polynomials.PolynomialsUtils$5@generate(int):246:w * w |==> w - w
128:AOR:*(int,int):/(int,int):org.apache.commons.math3.analysis.polynomials.PolynomialsUtils$5@generate(int):246:w * w |==> w / w
129:AOR:-(int,int):%(int,int):org.apache.commons.math3.analysis.polynomials.PolynomialsUtils$5@generate(int):246:v * v - w * w |==> v * v % (w * w)
130:AOR:-(int,int):*(int,int):org.apache.commons.math3.analysis.polynomials.PolynomialsUtils$5@generate(int):246:v * v - w * w |==> v * v * (w * w)
131:AOR:-(int,int):+(int,int):org.apache.commons.math3.analysis.polynomials.PolynomialsUtils$5@generate(int):246:v * v - w * w |==> v * v + w * w
132:AOR:-(int,int):/(int,int):org.apache.commons.math3.analysis.polynomials.PolynomialsUtils$5@generate(int):246:v * v - w * w |==> v * v / (w * w)
133:AOR:*(int,int):%(int,int):org.apache.commons.math3.analysis.polynomials.PolynomialsUtils$5@generate(int):246:twoKvwM1 * (v * v - w * w) |==> twoKvwM1 % (v * v - w * w)
134:AOR:*(int,int):+(int,int):org.apache.commons.math3.analysis.polynomials.PolynomialsUtils$5@generate(int):246:twoKvwM1 * (v * v - w * w) |==> twoKvwM1 + (v * v - w * w)
135:AOR:*(int,int):-(int,int):org.apache.commons.math3.analysis.polynomials.PolynomialsUtils$5@generate(int):246:twoKvwM1 * (v * v - w * w) |==> twoKvwM1 - (v * v - w * w)
136:AOR:*(int,int):/(int,int):org.apache.commons.math3.analysis.polynomials.PolynomialsUtils$5@generate(int):246:twoKvwM1 * (v * v - w * w) |==> twoKvwM1 / (v * v - w * w)
137:AOR:*(int,int):%(int,int):org.apache.commons.math3.analysis.polynomials.PolynomialsUtils$5@generate(int):247:twoKvwM1 * twoKvw |==> twoKvwM1 % twoKvw
138:AOR:*(int,int):+(int,int):org.apache.commons.math3.analysis.polynomials.PolynomialsUtils$5@generate(int):247:twoKvwM1 * twoKvw |==> twoKvwM1 + twoKvw
139:AOR:*(int,int):-(int,int):org.apache.commons.math3.analysis.polynomials.PolynomialsUtils$5@generate(int):247:twoKvwM1 * twoKvw |==> twoKvwM1 - twoKvw
140:AOR:*(int,int):/(int,int):org.apache.commons.math3.analysis.polynomials.PolynomialsUtils$5@generate(int):247:twoKvwM1 * twoKvw |==> twoKvwM1 / twoKvw
141:AOR:*(int,int):%(int,int):org.apache.commons.math3.analysis.polynomials.PolynomialsUtils$5@generate(int):247:twoKvwM1 * twoKvw * twoKvwM2 |==> twoKvwM1 * twoKvw % twoKvwM2
142:AOR:*(int,int):+(int,int):org.apache.commons.math3.analysis.polynomials.PolynomialsUtils$5@generate(int):247:twoKvwM1 * twoKvw * twoKvwM2 |==> twoKvwM1 * twoKvw + twoKvwM2
143:AOR:*(int,int):-(int,int):org.apache.commons.math3.analysis.polynomials.PolynomialsUtils$5@generate(int):247:twoKvwM1 * twoKvw * twoKvwM2 |==> twoKvwM1 * twoKvw - twoKvwM2
144:AOR:*(int,int):/(int,int):org.apache.commons.math3.analysis.polynomials.PolynomialsUtils$5@generate(int):247:twoKvwM1 * twoKvw * twoKvwM2 |==> twoKvwM1 * twoKvw / twoKvwM2
145:LVR:POS:0:org.apache.commons.math3.analysis.polynomials.PolynomialsUtils$5@generate(int):248:2 |==> 0
146:LVR:POS:NEG:org.apache.commons.math3.analysis.polynomials.PolynomialsUtils$5@generate(int):248:2 |==> -2
147:AOR:+(int,int):%(int,int):org.apache.commons.math3.analysis.polynomials.PolynomialsUtils$5@generate(int):248:k + v |==> k % v
148:AOR:+(int,int):*(int,int):org.apache.commons.math3.analysis.polynomials.PolynomialsUtils$5@generate(int):248:k + v |==> k * v
149:AOR:+(int,int):-(int,int):org.apache.commons.math3.analysis.polynomials.PolynomialsUtils$5@generate(int):248:k + v |==> k - v
150:AOR:+(int,int):/(int,int):org.apache.commons.math3.analysis.polynomials.PolynomialsUtils$5@generate(int):248:k + v |==> k / v
151:LVR:POS:0:org.apache.commons.math3.analysis.polynomials.PolynomialsUtils$5@generate(int):248:1 |==> 0
152:LVR:POS:NEG:org.apache.commons.math3.analysis.polynomials.PolynomialsUtils$5@generate(int):248:1 |==> -1
153:AOR:-(int,int):%(int,int):org.apache.commons.math3.analysis.polynomials.PolynomialsUtils$5@generate(int):248:k + v - 1 |==> (k + v) % 1
154:AOR:-(int,int):*(int,int):org.apache.commons.math3.analysis.polynomials.PolynomialsUtils$5@generate(int):248:k + v - 1 |==> (k + v) * 1
155:AOR:-(int,int):+(int,int):org.apache.commons.math3.analysis.polynomials.PolynomialsUtils$5@generate(int):248:k + v - 1 |==> k + v + 1
156:AOR:-(int,int):/(int,int):org.apache.commons.math3.analysis.polynomials.PolynomialsUtils$5@generate(int):248:k + v - 1 |==> (k + v) / 1
157:AOR:*(int,int):%(int,int):org.apache.commons.math3.analysis.polynomials.PolynomialsUtils$5@generate(int):248:2 * (k + v - 1) |==> 2 % (k + v - 1)
158:AOR:*(int,int):+(int,int):org.apache.commons.math3.analysis.polynomials.PolynomialsUtils$5@generate(int):248:2 * (k + v - 1) |==> 2 + (k + v - 1)
159:AOR:*(int,int):-(int,int):org.apache.commons.math3.analysis.polynomials.PolynomialsUtils$5@generate(int):248:2 * (k + v - 1) |==> 2 - (k + v - 1)
160:AOR:*(int,int):/(int,int):org.apache.commons.math3.analysis.polynomials.PolynomialsUtils$5@generate(int):248:2 * (k + v - 1) |==> 2 / (k + v - 1)
161:AOR:+(int,int):%(int,int):org.apache.commons.math3.analysis.polynomials.PolynomialsUtils$5@generate(int):248:k + w |==> k % w
162:AOR:+(int,int):*(int,int):org.apache.commons.math3.analysis.polynomials.PolynomialsUtils$5@generate(int):248:k + w |==> k * w
163:AOR:+(int,int):-(int,int):org.apache.commons.math3.analysis.polynomials.PolynomialsUtils$5@generate(int):248:k + w |==> k - w
164:AOR:+(int,int):/(int,int):org.apache.commons.math3.analysis.polynomials.PolynomialsUtils$5@generate(int):248:k + w |==> k / w
165:LVR:POS:0:org.apache.commons.math3.analysis.polynomials.PolynomialsUtils$5@generate(int):248:1 |==> 0
166:LVR:POS:NEG:org.apache.commons.math3.analysis.polynomials.PolynomialsUtils$5@generate(int):248:1 |==> -1
167:AOR:-(int,int):%(int,int):org.apache.commons.math3.analysis.polynomials.PolynomialsUtils$5@generate(int):248:k + w - 1 |==> (k + w) % 1
168:AOR:-(int,int):*(int,int):org.apache.commons.math3.analysis.polynomials.PolynomialsUtils$5@generate(int):248:k + w - 1 |==> (k + w) * 1
169:AOR:-(int,int):+(int,int):org.apache.commons.math3.analysis.polynomials.PolynomialsUtils$5@generate(int):248:k + w - 1 |==> k + w + 1
170:AOR:-(int,int):/(int,int):org.apache.commons.math3.analysis.polynomials.PolynomialsUtils$5@generate(int):248:k + w - 1 |==> (k + w) / 1
171:AOR:*(int,int):%(int,int):org.apache.commons.math3.analysis.polynomials.PolynomialsUtils$5@generate(int):248:2 * (k + v - 1) * (k + w - 1) |==> 2 * (k + v - 1) % (k + w - 1)
172:AOR:*(int,int):+(int,int):org.apache.commons.math3.analysis.polynomials.PolynomialsUtils$5@generate(int):248:2 * (k + v - 1) * (k + w - 1) |==> 2 * (k + v - 1) + (k + w - 1)
173:AOR:*(int,int):-(int,int):org.apache.commons.math3.analysis.polynomials.PolynomialsUtils$5@generate(int):248:2 * (k + v - 1) * (k + w - 1) |==> 2 * (k + v - 1) - (k + w - 1)
174:AOR:*(int,int):/(int,int):org.apache.commons.math3.analysis.polynomials.PolynomialsUtils$5@generate(int):248:2 * (k + v - 1) * (k + w - 1) |==> 2 * (k + v - 1) / (k + w - 1)
175:AOR:*(int,int):%(int,int):org.apache.commons.math3.analysis.polynomials.PolynomialsUtils$5@generate(int):248:2 * (k + v - 1) * (k + w - 1) * twoKvw |==> 2 * (k + v - 1) * (k + w - 1) % twoKvw
176:AOR:*(int,int):+(int,int):org.apache.commons.math3.analysis.polynomials.PolynomialsUtils$5@generate(int):248:2 * (k + v - 1) * (k + w - 1) * twoKvw |==> 2 * (k + v - 1) * (k + w - 1) + twoKvw
177:AOR:*(int,int):-(int,int):org.apache.commons.math3.analysis.polynomials.PolynomialsUtils$5@generate(int):248:2 * (k + v - 1) * (k + w - 1) * twoKvw |==> 2 * (k + v - 1) * (k + w - 1) - twoKvw
178:AOR:*(int,int):/(int,int):org.apache.commons.math3.analysis.polynomials.PolynomialsUtils$5@generate(int):248:2 * (k + v - 1) * (k + w - 1) * twoKvw |==> 2 * (k + v - 1) * (k + w - 1) / twoKvw
179:EVR:<IDENTIFIER(int)>:<DEFAULT>:org.apache.commons.math3.analysis.polynomials.PolynomialsUtils$JacobiKey@<init>(int,int):269:v |==> 0
180:EVR:<IDENTIFIER(int)>:<DEFAULT>:org.apache.commons.math3.analysis.polynomials.PolynomialsUtils$JacobiKey@<init>(int,int):270:w |==> 0
181:LVR:POS:0:org.apache.commons.math3.analysis.polynomials.PolynomialsUtils$JacobiKey@hashCode():278:16 |==> 0
182:LVR:POS:NEG:org.apache.commons.math3.analysis.polynomials.PolynomialsUtils$JacobiKey@hashCode():278:16 |==> -16
183:SOR:<<(int,int):>>(int,int):org.apache.commons.math3.analysis.polynomials.PolynomialsUtils$JacobiKey@hashCode():278:v << 16 |==> v >> 16
184:SOR:<<(int,int):>>>(int,int):org.apache.commons.math3.analysis.polynomials.PolynomialsUtils$JacobiKey@hashCode():278:v << 16 |==> v >>> 16
185:LOR:^(int,int):&(int,int):org.apache.commons.math3.analysis.polynomials.PolynomialsUtils$JacobiKey@hashCode():278:(v << 16) ^ w |==> (v << 16) & w
186:LOR:^(int,int):|(int,int):org.apache.commons.math3.analysis.polynomials.PolynomialsUtils$JacobiKey@hashCode():278:(v << 16) ^ w |==> (v << 16) | w
187:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.math3.analysis.polynomials.PolynomialsUtils$JacobiKey@equals(java.lang.Object):288:key == null |==> false
188:COR:||(boolean,boolean):!=(boolean,boolean):org.apache.commons.math3.analysis.polynomials.PolynomialsUtils$JacobiKey@equals(java.lang.Object):288:(key == null) || !(key instanceof JacobiKey) |==> (key == null) != !(key instanceof JacobiKey)
189:COR:||(boolean,boolean):LHS(boolean,boolean):org.apache.commons.math3.analysis.polynomials.PolynomialsUtils$JacobiKey@equals(java.lang.Object):288:(key == null) || !(key instanceof JacobiKey) |==> (key == null)
190:COR:||(boolean,boolean):RHS(boolean,boolean):org.apache.commons.math3.analysis.polynomials.PolynomialsUtils$JacobiKey@equals(java.lang.Object):288:(key == null) || !(key instanceof JacobiKey) |==> !(key instanceof JacobiKey)
191:COR:||(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.math3.analysis.polynomials.PolynomialsUtils$JacobiKey@equals(java.lang.Object):288:(key == null) || !(key instanceof JacobiKey) |==> true
192:LVR:FALSE:TRUE:org.apache.commons.math3.analysis.polynomials.PolynomialsUtils$JacobiKey@equals(java.lang.Object):289:false |==> true
193:STD:<RETURN>:<NO-OP>:org.apache.commons.math3.analysis.polynomials.PolynomialsUtils$JacobiKey@equals(java.lang.Object):289:return Config.__M_NO == 0 && Config.COVERED(192, 192) ? false : Config.__M_NO == 192 ? true : false; |==> <NO-OP>
194:EVR:<TYPE_CAST(org.apache.commons.math3.analysis.polynomials.PolynomialsUtils.JacobiKey)>:<DEFAULT>:org.apache.commons.math3.analysis.polynomials.PolynomialsUtils$JacobiKey@equals(java.lang.Object):292:(JacobiKey)key |==> null
195:ROR:==(int,int):<=(int,int):org.apache.commons.math3.analysis.polynomials.PolynomialsUtils$JacobiKey@equals(java.lang.Object):293:v == otherK.v |==> v <= otherK.v
196:ROR:==(int,int):>=(int,int):org.apache.commons.math3.analysis.polynomials.PolynomialsUtils$JacobiKey@equals(java.lang.Object):293:v == otherK.v |==> v >= otherK.v
197:ROR:==(int,int):FALSE(int,int):org.apache.commons.math3.analysis.polynomials.PolynomialsUtils$JacobiKey@equals(java.lang.Object):293:v == otherK.v |==> false
198:ROR:==(int,int):<=(int,int):org.apache.commons.math3.analysis.polynomials.PolynomialsUtils$JacobiKey@equals(java.lang.Object):293:w == otherK.w |==> w <= otherK.w
199:ROR:==(int,int):>=(int,int):org.apache.commons.math3.analysis.polynomials.PolynomialsUtils$JacobiKey@equals(java.lang.Object):293:w == otherK.w |==> w >= otherK.w
200:ROR:==(int,int):FALSE(int,int):org.apache.commons.math3.analysis.polynomials.PolynomialsUtils$JacobiKey@equals(java.lang.Object):293:w == otherK.w |==> false
201:COR:&&(boolean,boolean):==(boolean,boolean):org.apache.commons.math3.analysis.polynomials.PolynomialsUtils$JacobiKey@equals(java.lang.Object):293:(v == otherK.v) && (w == otherK.w) |==> (v == otherK.v) == (w == otherK.w)
202:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.math3.analysis.polynomials.PolynomialsUtils$JacobiKey@equals(java.lang.Object):293:(v == otherK.v) && (w == otherK.w) |==> false
203:COR:&&(boolean,boolean):LHS(boolean,boolean):org.apache.commons.math3.analysis.polynomials.PolynomialsUtils$JacobiKey@equals(java.lang.Object):293:(v == otherK.v) && (w == otherK.w) |==> (v == otherK.v)
204:COR:&&(boolean,boolean):RHS(boolean,boolean):org.apache.commons.math3.analysis.polynomials.PolynomialsUtils$JacobiKey@equals(java.lang.Object):293:(v == otherK.v) && (w == otherK.w) |==> (w == otherK.w)
205:EVR:<MEMBER_SELECT(int)>:<DEFAULT>:org.apache.commons.math3.analysis.polynomials.PolynomialsUtils@shift(double[],double):324:coefficients.length |==> 0
206:EVR:<NEW_ARRAY(double[])>:<DEFAULT>:org.apache.commons.math3.analysis.polynomials.PolynomialsUtils@shift(double[],double):325:new double[dp1] |==> null
207:EVR:<NEW_ARRAY(int[][])>:<DEFAULT>:org.apache.commons.math3.analysis.polynomials.PolynomialsUtils@shift(double[],double):328:new int[dp1][dp1] |==> null
208:LVR:0:POS:org.apache.commons.math3.analysis.polynomials.PolynomialsUtils@shift(double[],double):329:0 |==> 1
209:LVR:0:NEG:org.apache.commons.math3.analysis.polynomials.PolynomialsUtils@shift(double[],double):329:0 |==> -1
210:ROR:<(int,int):!=(int,int):org.apache.commons.math3.analysis.polynomials.PolynomialsUtils@shift(double[],double):329:i < dp1 |==> i != dp1
211:ROR:<(int,int):<=(int,int):org.apache.commons.math3.analysis.polynomials.PolynomialsUtils@shift(double[],double):329:i < dp1 |==> i <= dp1
212:ROR:<(int,int):FALSE(int,int):org.apache.commons.math3.analysis.polynomials.PolynomialsUtils@shift(double[],double):329:i < dp1 |==> false
213:LVR:0:POS:org.apache.commons.math3.analysis.polynomials.PolynomialsUtils@shift(double[],double):330:0 |==> 1
214:LVR:0:NEG:org.apache.commons.math3.analysis.polynomials.PolynomialsUtils@shift(double[],double):330:0 |==> -1
215:ROR:<=(int,int):<(int,int):org.apache.commons.math3.analysis.polynomials.PolynomialsUtils@shift(double[],double):330:j <= i |==> j < i
216:ROR:<=(int,int):==(int,int):org.apache.commons.math3.analysis.polynomials.PolynomialsUtils@shift(double[],double):330:j <= i |==> j == i
217:ROR:<=(int,int):TRUE(int,int):org.apache.commons.math3.analysis.polynomials.PolynomialsUtils@shift(double[],double):330:j <= i |==> true
218:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math3.analysis.polynomials.PolynomialsUtils@shift(double[],double):331:coeff[i][j] = (int)CombinatoricsUtils.binomialCoefficient(i, j) |==> <NO-OP>
219:LVR:0:POS:org.apache.commons.math3.analysis.polynomials.PolynomialsUtils@shift(double[],double):336:0 |==> 1
220:LVR:0:NEG:org.apache.commons.math3.analysis.polynomials.PolynomialsUtils@shift(double[],double):336:0 |==> -1
221:ROR:<(int,int):!=(int,int):org.apache.commons.math3.analysis.polynomials.PolynomialsUtils@shift(double[],double):336:i < dp1 |==> i != dp1
222:ROR:<(int,int):<=(int,int):org.apache.commons.math3.analysis.polynomials.PolynomialsUtils@shift(double[],double):336:i < dp1 |==> i <= dp1
223:ROR:<(int,int):FALSE(int,int):org.apache.commons.math3.analysis.polynomials.PolynomialsUtils@shift(double[],double):336:i < dp1 |==> false
224:LVR:0:POS:org.apache.commons.math3.analysis.polynomials.PolynomialsUtils@shift(double[],double):337:0 |==> 1
225:LVR:0:NEG:org.apache.commons.math3.analysis.polynomials.PolynomialsUtils@shift(double[],double):337:0 |==> -1
226:AOR:*(double,double):%(double,double):org.apache.commons.math3.analysis.polynomials.PolynomialsUtils@shift(double[],double):337:coefficients[i] * FastMath.pow(shift, i) |==> coefficients[i] % FastMath.pow(shift, i)
227:AOR:*(double,double):+(double,double):org.apache.commons.math3.analysis.polynomials.PolynomialsUtils@shift(double[],double):337:coefficients[i] * FastMath.pow(shift, i) |==> coefficients[i] + FastMath.pow(shift, i)
228:AOR:*(double,double):-(double,double):org.apache.commons.math3.analysis.polynomials.PolynomialsUtils@shift(double[],double):337:coefficients[i] * FastMath.pow(shift, i) |==> coefficients[i] - FastMath.pow(shift, i)
229:AOR:*(double,double):/(double,double):org.apache.commons.math3.analysis.polynomials.PolynomialsUtils@shift(double[],double):337:coefficients[i] * FastMath.pow(shift, i) |==> coefficients[i] / FastMath.pow(shift, i)
230:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math3.analysis.polynomials.PolynomialsUtils@shift(double[],double):337:newCoefficients[0] += coefficients[i] * FastMath.pow(shift, i) |==> <NO-OP>
231:LVR:POS:0:org.apache.commons.math3.analysis.polynomials.PolynomialsUtils@shift(double[],double):341:1 |==> 0
232:LVR:POS:NEG:org.apache.commons.math3.analysis.polynomials.PolynomialsUtils@shift(double[],double):341:1 |==> -1
233:AOR:-(int,int):%(int,int):org.apache.commons.math3.analysis.polynomials.PolynomialsUtils@shift(double[],double):341:dp1 - 1 |==> dp1 % 1
234:AOR:-(int,int):*(int,int):org.apache.commons.math3.analysis.polynomials.PolynomialsUtils@shift(double[],double):341:dp1 - 1 |==> dp1 * 1
235:AOR:-(int,int):+(int,int):org.apache.commons.math3.analysis.polynomials.PolynomialsUtils@shift(double[],double):341:dp1 - 1 |==> dp1 + 1
236:AOR:-(int,int):/(int,int):org.apache.commons.math3.analysis.polynomials.PolynomialsUtils@shift(double[],double):341:dp1 - 1 |==> dp1 / 1
237:LVR:0:POS:org.apache.commons.math3.analysis.polynomials.PolynomialsUtils@shift(double[],double):342:0 |==> 1
238:LVR:0:NEG:org.apache.commons.math3.analysis.polynomials.PolynomialsUtils@shift(double[],double):342:0 |==> -1
239:ROR:<(int,int):!=(int,int):org.apache.commons.math3.analysis.polynomials.PolynomialsUtils@shift(double[],double):342:i < d |==> i != d
240:ROR:<(int,int):<=(int,int):org.apache.commons.math3.analysis.polynomials.PolynomialsUtils@shift(double[],double):342:i < d |==> i <= d
241:ROR:<(int,int):FALSE(int,int):org.apache.commons.math3.analysis.polynomials.PolynomialsUtils@shift(double[],double):342:i < d |==> false
242:EVR:<IDENTIFIER(int)>:<DEFAULT>:org.apache.commons.math3.analysis.polynomials.PolynomialsUtils@shift(double[],double):343:i |==> 0
243:ROR:<(int,int):!=(int,int):org.apache.commons.math3.analysis.polynomials.PolynomialsUtils@shift(double[],double):343:j < d |==> j != d
244:ROR:<(int,int):<=(int,int):org.apache.commons.math3.analysis.polynomials.PolynomialsUtils@shift(double[],double):343:j < d |==> j <= d
245:ROR:<(int,int):FALSE(int,int):org.apache.commons.math3.analysis.polynomials.PolynomialsUtils@shift(double[],double):343:j < d |==> false
246:LVR:POS:0:org.apache.commons.math3.analysis.polynomials.PolynomialsUtils@shift(double[],double):344:1 |==> 0
247:LVR:POS:NEG:org.apache.commons.math3.analysis.polynomials.PolynomialsUtils@shift(double[],double):344:1 |==> -1
248:AOR:+(int,int):%(int,int):org.apache.commons.math3.analysis.polynomials.PolynomialsUtils@shift(double[],double):344:i + 1 |==> i % 1
249:AOR:+(int,int):*(int,int):org.apache.commons.math3.analysis.polynomials.PolynomialsUtils@shift(double[],double):344:i + 1 |==> i * 1
250:AOR:+(int,int):-(int,int):org.apache.commons.math3.analysis.polynomials.PolynomialsUtils@shift(double[],double):344:i + 1 |==> i - 1
251:AOR:+(int,int):/(int,int):org.apache.commons.math3.analysis.polynomials.PolynomialsUtils@shift(double[],double):344:i + 1 |==> i / 1
252:LVR:POS:0:org.apache.commons.math3.analysis.polynomials.PolynomialsUtils@shift(double[],double):344:1 |==> 0
253:LVR:POS:NEG:org.apache.commons.math3.analysis.polynomials.PolynomialsUtils@shift(double[],double):344:1 |==> -1
254:AOR:+(int,int):%(int,int):org.apache.commons.math3.analysis.polynomials.PolynomialsUtils@shift(double[],double):344:j + 1 |==> j % 1
255:AOR:+(int,int):*(int,int):org.apache.commons.math3.analysis.polynomials.PolynomialsUtils@shift(double[],double):344:j + 1 |==> j * 1
256:AOR:+(int,int):-(int,int):org.apache.commons.math3.analysis.polynomials.PolynomialsUtils@shift(double[],double):344:j + 1 |==> j - 1
257:AOR:+(int,int):/(int,int):org.apache.commons.math3.analysis.polynomials.PolynomialsUtils@shift(double[],double):344:j + 1 |==> j / 1
258:AOR:-(int,int):%(int,int):org.apache.commons.math3.analysis.polynomials.PolynomialsUtils@shift(double[],double):344:j - i |==> j % i
259:AOR:-(int,int):*(int,int):org.apache.commons.math3.analysis.polynomials.PolynomialsUtils@shift(double[],double):344:j - i |==> j * i
260:AOR:-(int,int):+(int,int):org.apache.commons.math3.analysis.polynomials.PolynomialsUtils@shift(double[],double):344:j - i |==> j + i
261:AOR:-(int,int):/(int,int):org.apache.commons.math3.analysis.polynomials.PolynomialsUtils@shift(double[],double):344:j - i |==> j / i
262:LVR:POS:0:org.apache.commons.math3.analysis.polynomials.PolynomialsUtils@shift(double[],double):345:1 |==> 0
263:LVR:POS:NEG:org.apache.commons.math3.analysis.polynomials.PolynomialsUtils@shift(double[],double):345:1 |==> -1
264:AOR:+(int,int):%(int,int):org.apache.commons.math3.analysis.polynomials.PolynomialsUtils@shift(double[],double):345:j + 1 |==> j % 1
265:AOR:+(int,int):*(int,int):org.apache.commons.math3.analysis.polynomials.PolynomialsUtils@shift(double[],double):345:j + 1 |==> j * 1
266:AOR:+(int,int):-(int,int):org.apache.commons.math3.analysis.polynomials.PolynomialsUtils@shift(double[],double):345:j + 1 |==> j - 1
267:AOR:+(int,int):/(int,int):org.apache.commons.math3.analysis.polynomials.PolynomialsUtils@shift(double[],double):345:j + 1 |==> j / 1
268:AOR:*(double,double):%(double,double):org.apache.commons.math3.analysis.polynomials.PolynomialsUtils@shift(double[],double):344:coeff[j + 1][j - i] * coefficients[j + 1] |==> coeff[j + 1][j - i] % coefficients[j + 1]
269:AOR:*(double,double):+(double,double):org.apache.commons.math3.analysis.polynomials.PolynomialsUtils@shift(double[],double):344:coeff[j + 1][j - i] * coefficients[j + 1] |==> coeff[j + 1][j - i] + coefficients[j + 1]
270:AOR:*(double,double):-(double,double):org.apache.commons.math3.analysis.polynomials.PolynomialsUtils@shift(double[],double):344:coeff[j + 1][j - i] * coefficients[j + 1] |==> coeff[j + 1][j - i] - coefficients[j + 1]
271:AOR:*(double,double):/(double,double):org.apache.commons.math3.analysis.polynomials.PolynomialsUtils@shift(double[],double):344:coeff[j + 1][j - i] * coefficients[j + 1] |==> coeff[j + 1][j - i] / coefficients[j + 1]
272:AOR:-(int,int):%(int,int):org.apache.commons.math3.analysis.polynomials.PolynomialsUtils@shift(double[],double):345:j - i |==> j % i
273:AOR:-(int,int):*(int,int):org.apache.commons.math3.analysis.polynomials.PolynomialsUtils@shift(double[],double):345:j - i |==> j * i
274:AOR:-(int,int):+(int,int):org.apache.commons.math3.analysis.polynomials.PolynomialsUtils@shift(double[],double):345:j - i |==> j + i
275:AOR:-(int,int):/(int,int):org.apache.commons.math3.analysis.polynomials.PolynomialsUtils@shift(double[],double):345:j - i |==> j / i
276:AOR:*(double,double):%(double,double):org.apache.commons.math3.analysis.polynomials.PolynomialsUtils@shift(double[],double):344:coeff[j + 1][j - i] * coefficients[j + 1] * FastMath.pow(shift, j - i) |==> coeff[j + 1][j - i] * coefficients[j + 1] % FastMath.pow(shift, j - i)
277:AOR:*(double,double):+(double,double):org.apache.commons.math3.analysis.polynomials.PolynomialsUtils@shift(double[],double):344:coeff[j + 1][j - i] * coefficients[j + 1] * FastMath.pow(shift, j - i) |==> coeff[j + 1][j - i] * coefficients[j + 1] + FastMath.pow(shift, j - i)
278:AOR:*(double,double):-(double,double):org.apache.commons.math3.analysis.polynomials.PolynomialsUtils@shift(double[],double):344:coeff[j + 1][j - i] * coefficients[j + 1] * FastMath.pow(shift, j - i) |==> coeff[j + 1][j - i] * coefficients[j + 1] - FastMath.pow(shift, j - i)
279:AOR:*(double,double):/(double,double):org.apache.commons.math3.analysis.polynomials.PolynomialsUtils@shift(double[],double):344:coeff[j + 1][j - i] * coefficients[j + 1] * FastMath.pow(shift, j - i) |==> coeff[j + 1][j - i] * coefficients[j + 1] / FastMath.pow(shift, j - i)
280:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math3.analysis.polynomials.PolynomialsUtils@shift(double[],double):344:newCoefficients[i + 1] += coeff[j + 1][j - i] * coefficients[j + 1] * FastMath.pow(shift, j - i) |==> <NO-OP>
281:EVR:<IDENTIFIER(double[])>:<DEFAULT>:org.apache.commons.math3.analysis.polynomials.PolynomialsUtils@shift(double[],double):349:newCoefficients |==> null
282:LVR:POS:0:org.apache.commons.math3.analysis.polynomials.PolynomialsUtils@buildPolynomial(int,java.util.List<org.apache.commons.math3.fraction.BigFraction>,org.apache.commons.math3.analysis.polynomials.PolynomialsUtils.RecurrenceCoefficientsGenerator):363:2 |==> 0
283:LVR:POS:NEG:org.apache.commons.math3.analysis.polynomials.PolynomialsUtils@buildPolynomial(int,java.util.List<org.apache.commons.math3.fraction.BigFraction>,org.apache.commons.math3.analysis.polynomials.PolynomialsUtils.RecurrenceCoefficientsGenerator):363:2 |==> -2
284:AOR:*(int,int):%(int,int):org.apache.commons.math3.analysis.polynomials.PolynomialsUtils@buildPolynomial(int,java.util.List<org.apache.commons.math3.fraction.BigFraction>,org.apache.commons.math3.analysis.polynomials.PolynomialsUtils.RecurrenceCoefficientsGenerator):363:2 * coefficients.size() |==> 2 % coefficients.size()
285:AOR:*(int,int):+(int,int):org.apache.commons.math3.analysis.polynomials.PolynomialsUtils@buildPolynomial(int,java.util.List<org.apache.commons.math3.fraction.BigFraction>,org.apache.commons.math3.analysis.polynomials.PolynomialsUtils.RecurrenceCoefficientsGenerator):363:2 * coefficients.size() |==> 2 + coefficients.size()
286:AOR:*(int,int):-(int,int):org.apache.commons.math3.analysis.polynomials.PolynomialsUtils@buildPolynomial(int,java.util.List<org.apache.commons.math3.fraction.BigFraction>,org.apache.commons.math3.analysis.polynomials.PolynomialsUtils.RecurrenceCoefficientsGenerator):363:2 * coefficients.size() |==> 2 - coefficients.size()
287:AOR:*(int,int):/(int,int):org.apache.commons.math3.analysis.polynomials.PolynomialsUtils@buildPolynomial(int,java.util.List<org.apache.commons.math3.fraction.BigFraction>,org.apache.commons.math3.analysis.polynomials.PolynomialsUtils.RecurrenceCoefficientsGenerator):363:2 * coefficients.size() |==> 2 / coefficients.size()
288:LVR:POS:0:org.apache.commons.math3.analysis.polynomials.PolynomialsUtils@buildPolynomial(int,java.util.List<org.apache.commons.math3.fraction.BigFraction>,org.apache.commons.math3.analysis.polynomials.PolynomialsUtils.RecurrenceCoefficientsGenerator):363:1 |==> 0
289:LVR:POS:NEG:org.apache.commons.math3.analysis.polynomials.PolynomialsUtils@buildPolynomial(int,java.util.List<org.apache.commons.math3.fraction.BigFraction>,org.apache.commons.math3.analysis.polynomials.PolynomialsUtils.RecurrenceCoefficientsGenerator):363:1 |==> -1
290:AOR:-(int,int):%(int,int):org.apache.commons.math3.analysis.polynomials.PolynomialsUtils@buildPolynomial(int,java.util.List<org.apache.commons.math3.fraction.BigFraction>,org.apache.commons.math3.analysis.polynomials.PolynomialsUtils.RecurrenceCoefficientsGenerator):363:(int)FastMath.floor(FastMath.sqrt(2 * coefficients.size())) - 1 |==> (int)FastMath.floor(FastMath.sqrt(2 * coefficients.size())) % 1
291:AOR:-(int,int):*(int,int):org.apache.commons.math3.analysis.polynomials.PolynomialsUtils@buildPolynomial(int,java.util.List<org.apache.commons.math3.fraction.BigFraction>,org.apache.commons.math3.analysis.polynomials.PolynomialsUtils.RecurrenceCoefficientsGenerator):363:(int)FastMath.floor(FastMath.sqrt(2 * coefficients.size())) - 1 |==> (int)FastMath.floor(FastMath.sqrt(2 * coefficients.size())) * 1
292:AOR:-(int,int):+(int,int):org.apache.commons.math3.analysis.polynomials.PolynomialsUtils@buildPolynomial(int,java.util.List<org.apache.commons.math3.fraction.BigFraction>,org.apache.commons.math3.analysis.polynomials.PolynomialsUtils.RecurrenceCoefficientsGenerator):363:(int)FastMath.floor(FastMath.sqrt(2 * coefficients.size())) - 1 |==> (int)FastMath.floor(FastMath.sqrt(2 * coefficients.size())) + 1
293:AOR:-(int,int):/(int,int):org.apache.commons.math3.analysis.polynomials.PolynomialsUtils@buildPolynomial(int,java.util.List<org.apache.commons.math3.fraction.BigFraction>,org.apache.commons.math3.analysis.polynomials.PolynomialsUtils.RecurrenceCoefficientsGenerator):363:(int)FastMath.floor(FastMath.sqrt(2 * coefficients.size())) - 1 |==> (int)FastMath.floor(FastMath.sqrt(2 * coefficients.size())) / 1
294:ROR:>(int,int):!=(int,int):org.apache.commons.math3.analysis.polynomials.PolynomialsUtils@buildPolynomial(int,java.util.List<org.apache.commons.math3.fraction.BigFraction>,org.apache.commons.math3.analysis.polynomials.PolynomialsUtils.RecurrenceCoefficientsGenerator):365:degree > maxDegree |==> degree != maxDegree
295:ROR:>(int,int):>=(int,int):org.apache.commons.math3.analysis.polynomials.PolynomialsUtils@buildPolynomial(int,java.util.List<org.apache.commons.math3.fraction.BigFraction>,org.apache.commons.math3.analysis.polynomials.PolynomialsUtils.RecurrenceCoefficientsGenerator):365:degree > maxDegree |==> degree >= maxDegree
296:ROR:>(int,int):FALSE(int,int):org.apache.commons.math3.analysis.polynomials.PolynomialsUtils@buildPolynomial(int,java.util.List<org.apache.commons.math3.fraction.BigFraction>,org.apache.commons.math3.analysis.polynomials.PolynomialsUtils.RecurrenceCoefficientsGenerator):365:degree > maxDegree |==> false
297:STD:<CALL>:<NO-OP>:org.apache.commons.math3.analysis.polynomials.PolynomialsUtils@buildPolynomial(int,java.util.List<org.apache.commons.math3.fraction.BigFraction>,org.apache.commons.math3.analysis.polynomials.PolynomialsUtils.RecurrenceCoefficientsGenerator):366:computeUpToDegree(degree, maxDegree, generator, coefficients) |==> <NO-OP>
298:LVR:POS:0:org.apache.commons.math3.analysis.polynomials.PolynomialsUtils@buildPolynomial(int,java.util.List<org.apache.commons.math3.fraction.BigFraction>,org.apache.commons.math3.analysis.polynomials.PolynomialsUtils.RecurrenceCoefficientsGenerator):378:1 |==> 0
299:LVR:POS:NEG:org.apache.commons.math3.analysis.polynomials.PolynomialsUtils@buildPolynomial(int,java.util.List<org.apache.commons.math3.fraction.BigFraction>,org.apache.commons.math3.analysis.polynomials.PolynomialsUtils.RecurrenceCoefficientsGenerator):378:1 |==> -1
300:AOR:+(int,int):%(int,int):org.apache.commons.math3.analysis.polynomials.PolynomialsUtils@buildPolynomial(int,java.util.List<org.apache.commons.math3.fraction.BigFraction>,org.apache.commons.math3.analysis.polynomials.PolynomialsUtils.RecurrenceCoefficientsGenerator):378:degree + 1 |==> degree % 1
301:AOR:+(int,int):*(int,int):org.apache.commons.math3.analysis.polynomials.PolynomialsUtils@buildPolynomial(int,java.util.List<org.apache.commons.math3.fraction.BigFraction>,org.apache.commons.math3.analysis.polynomials.PolynomialsUtils.RecurrenceCoefficientsGenerator):378:degree + 1 |==> degree * 1
302:AOR:+(int,int):-(int,int):org.apache.commons.math3.analysis.polynomials.PolynomialsUtils@buildPolynomial(int,java.util.List<org.apache.commons.math3.fraction.BigFraction>,org.apache.commons.math3.analysis.polynomials.PolynomialsUtils.RecurrenceCoefficientsGenerator):378:degree + 1 |==> degree - 1
303:AOR:+(int,int):/(int,int):org.apache.commons.math3.analysis.polynomials.PolynomialsUtils@buildPolynomial(int,java.util.List<org.apache.commons.math3.fraction.BigFraction>,org.apache.commons.math3.analysis.polynomials.PolynomialsUtils.RecurrenceCoefficientsGenerator):378:degree + 1 |==> degree / 1
304:AOR:*(int,int):%(int,int):org.apache.commons.math3.analysis.polynomials.PolynomialsUtils@buildPolynomial(int,java.util.List<org.apache.commons.math3.fraction.BigFraction>,org.apache.commons.math3.analysis.polynomials.PolynomialsUtils.RecurrenceCoefficientsGenerator):378:degree * (degree + 1) |==> degree % (degree + 1)
305:AOR:*(int,int):+(int,int):org.apache.commons.math3.analysis.polynomials.PolynomialsUtils@buildPolynomial(int,java.util.List<org.apache.commons.math3.fraction.BigFraction>,org.apache.commons.math3.analysis.polynomials.PolynomialsUtils.RecurrenceCoefficientsGenerator):378:degree * (degree + 1) |==> degree + (degree + 1)
306:AOR:*(int,int):-(int,int):org.apache.commons.math3.analysis.polynomials.PolynomialsUtils@buildPolynomial(int,java.util.List<org.apache.commons.math3.fraction.BigFraction>,org.apache.commons.math3.analysis.polynomials.PolynomialsUtils.RecurrenceCoefficientsGenerator):378:degree * (degree + 1) |==> degree - (degree + 1)
307:AOR:*(int,int):/(int,int):org.apache.commons.math3.analysis.polynomials.PolynomialsUtils@buildPolynomial(int,java.util.List<org.apache.commons.math3.fraction.BigFraction>,org.apache.commons.math3.analysis.polynomials.PolynomialsUtils.RecurrenceCoefficientsGenerator):378:degree * (degree + 1) |==> degree / (degree + 1)
308:LVR:POS:0:org.apache.commons.math3.analysis.polynomials.PolynomialsUtils@buildPolynomial(int,java.util.List<org.apache.commons.math3.fraction.BigFraction>,org.apache.commons.math3.analysis.polynomials.PolynomialsUtils.RecurrenceCoefficientsGenerator):378:2 |==> 0
309:LVR:POS:NEG:org.apache.commons.math3.analysis.polynomials.PolynomialsUtils@buildPolynomial(int,java.util.List<org.apache.commons.math3.fraction.BigFraction>,org.apache.commons.math3.analysis.polynomials.PolynomialsUtils.RecurrenceCoefficientsGenerator):378:2 |==> -2
310:AOR:/(int,int):%(int,int):org.apache.commons.math3.analysis.polynomials.PolynomialsUtils@buildPolynomial(int,java.util.List<org.apache.commons.math3.fraction.BigFraction>,org.apache.commons.math3.analysis.polynomials.PolynomialsUtils.RecurrenceCoefficientsGenerator):378:degree * (degree + 1) / 2 |==> degree * (degree + 1) % 2
311:AOR:/(int,int):*(int,int):org.apache.commons.math3.analysis.polynomials.PolynomialsUtils@buildPolynomial(int,java.util.List<org.apache.commons.math3.fraction.BigFraction>,org.apache.commons.math3.analysis.polynomials.PolynomialsUtils.RecurrenceCoefficientsGenerator):378:degree * (degree + 1) / 2 |==> degree * (degree + 1) * 2
312:AOR:/(int,int):+(int,int):org.apache.commons.math3.analysis.polynomials.PolynomialsUtils@buildPolynomial(int,java.util.List<org.apache.commons.math3.fraction.BigFraction>,org.apache.commons.math3.analysis.polynomials.PolynomialsUtils.RecurrenceCoefficientsGenerator):378:degree * (degree + 1) / 2 |==> degree * (degree + 1) + 2
313:AOR:/(int,int):-(int,int):org.apache.commons.math3.analysis.polynomials.PolynomialsUtils@buildPolynomial(int,java.util.List<org.apache.commons.math3.fraction.BigFraction>,org.apache.commons.math3.analysis.polynomials.PolynomialsUtils.RecurrenceCoefficientsGenerator):378:degree * (degree + 1) / 2 |==> degree * (degree + 1) - 2
314:LVR:POS:0:org.apache.commons.math3.analysis.polynomials.PolynomialsUtils@buildPolynomial(int,java.util.List<org.apache.commons.math3.fraction.BigFraction>,org.apache.commons.math3.analysis.polynomials.PolynomialsUtils.RecurrenceCoefficientsGenerator):380:1 |==> 0
315:LVR:POS:NEG:org.apache.commons.math3.analysis.polynomials.PolynomialsUtils@buildPolynomial(int,java.util.List<org.apache.commons.math3.fraction.BigFraction>,org.apache.commons.math3.analysis.polynomials.PolynomialsUtils.RecurrenceCoefficientsGenerator):380:1 |==> -1
316:AOR:+(int,int):%(int,int):org.apache.commons.math3.analysis.polynomials.PolynomialsUtils@buildPolynomial(int,java.util.List<org.apache.commons.math3.fraction.BigFraction>,org.apache.commons.math3.analysis.polynomials.PolynomialsUtils.RecurrenceCoefficientsGenerator):380:degree + 1 |==> degree % 1
317:AOR:+(int,int):*(int,int):org.apache.commons.math3.analysis.polynomials.PolynomialsUtils@buildPolynomial(int,java.util.List<org.apache.commons.math3.fraction.BigFraction>,org.apache.commons.math3.analysis.polynomials.PolynomialsUtils.RecurrenceCoefficientsGenerator):380:degree + 1 |==> degree * 1
318:AOR:+(int,int):-(int,int):org.apache.commons.math3.analysis.polynomials.PolynomialsUtils@buildPolynomial(int,java.util.List<org.apache.commons.math3.fraction.BigFraction>,org.apache.commons.math3.analysis.polynomials.PolynomialsUtils.RecurrenceCoefficientsGenerator):380:degree + 1 |==> degree - 1
319:AOR:+(int,int):/(int,int):org.apache.commons.math3.analysis.polynomials.PolynomialsUtils@buildPolynomial(int,java.util.List<org.apache.commons.math3.fraction.BigFraction>,org.apache.commons.math3.analysis.polynomials.PolynomialsUtils.RecurrenceCoefficientsGenerator):380:degree + 1 |==> degree / 1
320:LVR:0:POS:org.apache.commons.math3.analysis.polynomials.PolynomialsUtils@buildPolynomial(int,java.util.List<org.apache.commons.math3.fraction.BigFraction>,org.apache.commons.math3.analysis.polynomials.PolynomialsUtils.RecurrenceCoefficientsGenerator):381:0 |==> 1
321:LVR:0:NEG:org.apache.commons.math3.analysis.polynomials.PolynomialsUtils@buildPolynomial(int,java.util.List<org.apache.commons.math3.fraction.BigFraction>,org.apache.commons.math3.analysis.polynomials.PolynomialsUtils.RecurrenceCoefficientsGenerator):381:0 |==> -1
322:ROR:<=(int,int):<(int,int):org.apache.commons.math3.analysis.polynomials.PolynomialsUtils@buildPolynomial(int,java.util.List<org.apache.commons.math3.fraction.BigFraction>,org.apache.commons.math3.analysis.polynomials.PolynomialsUtils.RecurrenceCoefficientsGenerator):381:i <= degree |==> i < degree
323:ROR:<=(int,int):==(int,int):org.apache.commons.math3.analysis.polynomials.PolynomialsUtils@buildPolynomial(int,java.util.List<org.apache.commons.math3.fraction.BigFraction>,org.apache.commons.math3.analysis.polynomials.PolynomialsUtils.RecurrenceCoefficientsGenerator):381:i <= degree |==> i == degree
324:ROR:<=(int,int):TRUE(int,int):org.apache.commons.math3.analysis.polynomials.PolynomialsUtils@buildPolynomial(int,java.util.List<org.apache.commons.math3.fraction.BigFraction>,org.apache.commons.math3.analysis.polynomials.PolynomialsUtils.RecurrenceCoefficientsGenerator):381:i <= degree |==> true
325:AOR:+(int,int):%(int,int):org.apache.commons.math3.analysis.polynomials.PolynomialsUtils@buildPolynomial(int,java.util.List<org.apache.commons.math3.fraction.BigFraction>,org.apache.commons.math3.analysis.polynomials.PolynomialsUtils.RecurrenceCoefficientsGenerator):382:start + i |==> start % i
326:AOR:+(int,int):*(int,int):org.apache.commons.math3.analysis.polynomials.PolynomialsUtils@buildPolynomial(int,java.util.List<org.apache.commons.math3.fraction.BigFraction>,org.apache.commons.math3.analysis.polynomials.PolynomialsUtils.RecurrenceCoefficientsGenerator):382:start + i |==> start * i
327:AOR:+(int,int):-(int,int):org.apache.commons.math3.analysis.polynomials.PolynomialsUtils@buildPolynomial(int,java.util.List<org.apache.commons.math3.fraction.BigFraction>,org.apache.commons.math3.analysis.polynomials.PolynomialsUtils.RecurrenceCoefficientsGenerator):382:start + i |==> start - i
328:AOR:+(int,int):/(int,int):org.apache.commons.math3.analysis.polynomials.PolynomialsUtils@buildPolynomial(int,java.util.List<org.apache.commons.math3.fraction.BigFraction>,org.apache.commons.math3.analysis.polynomials.PolynomialsUtils.RecurrenceCoefficientsGenerator):382:start + i |==> start / i
329:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math3.analysis.polynomials.PolynomialsUtils@buildPolynomial(int,java.util.List<org.apache.commons.math3.fraction.BigFraction>,org.apache.commons.math3.analysis.polynomials.PolynomialsUtils.RecurrenceCoefficientsGenerator):382:a[i] = coefficients.get(start + i).doubleValue() |==> <NO-OP>
330:EVR:<NEW_CLASS(org.apache.commons.math3.analysis.polynomials.PolynomialFunction)>:<DEFAULT>:org.apache.commons.math3.analysis.polynomials.PolynomialsUtils@buildPolynomial(int,java.util.List<org.apache.commons.math3.fraction.BigFraction>,org.apache.commons.math3.analysis.polynomials.PolynomialsUtils.RecurrenceCoefficientsGenerator):386:new PolynomialFunction(a) |==> null
331:LVR:POS:0:org.apache.commons.math3.analysis.polynomials.PolynomialsUtils@computeUpToDegree(int,int,org.apache.commons.math3.analysis.polynomials.PolynomialsUtils.RecurrenceCoefficientsGenerator,java.util.List<org.apache.commons.math3.fraction.BigFraction>):400:1 |==> 0
332:LVR:POS:NEG:org.apache.commons.math3.analysis.polynomials.PolynomialsUtils@computeUpToDegree(int,int,org.apache.commons.math3.analysis.polynomials.PolynomialsUtils.RecurrenceCoefficientsGenerator,java.util.List<org.apache.commons.math3.fraction.BigFraction>):400:1 |==> -1
333:AOR:-(int,int):%(int,int):org.apache.commons.math3.analysis.polynomials.PolynomialsUtils@computeUpToDegree(int,int,org.apache.commons.math3.analysis.polynomials.PolynomialsUtils.RecurrenceCoefficientsGenerator,java.util.List<org.apache.commons.math3.fraction.BigFraction>):400:maxDegree - 1 |==> maxDegree % 1
334:AOR:-(int,int):*(int,int):org.apache.commons.math3.analysis.polynomials.PolynomialsUtils@computeUpToDegree(int,int,org.apache.commons.math3.analysis.polynomials.PolynomialsUtils.RecurrenceCoefficientsGenerator,java.util.List<org.apache.commons.math3.fraction.BigFraction>):400:maxDegree - 1 |==> maxDegree * 1
335:AOR:-(int,int):+(int,int):org.apache.commons.math3.analysis.polynomials.PolynomialsUtils@computeUpToDegree(int,int,org.apache.commons.math3.analysis.polynomials.PolynomialsUtils.RecurrenceCoefficientsGenerator,java.util.List<org.apache.commons.math3.fraction.BigFraction>):400:maxDegree - 1 |==> maxDegree + 1
336:AOR:-(int,int):/(int,int):org.apache.commons.math3.analysis.polynomials.PolynomialsUtils@computeUpToDegree(int,int,org.apache.commons.math3.analysis.polynomials.PolynomialsUtils.RecurrenceCoefficientsGenerator,java.util.List<org.apache.commons.math3.fraction.BigFraction>):400:maxDegree - 1 |==> maxDegree / 1
337:AOR:*(int,int):%(int,int):org.apache.commons.math3.analysis.polynomials.PolynomialsUtils@computeUpToDegree(int,int,org.apache.commons.math3.analysis.polynomials.PolynomialsUtils.RecurrenceCoefficientsGenerator,java.util.List<org.apache.commons.math3.fraction.BigFraction>):400:(maxDegree - 1) * maxDegree |==> (maxDegree - 1) % maxDegree
338:AOR:*(int,int):+(int,int):org.apache.commons.math3.analysis.polynomials.PolynomialsUtils@computeUpToDegree(int,int,org.apache.commons.math3.analysis.polynomials.PolynomialsUtils.RecurrenceCoefficientsGenerator,java.util.List<org.apache.commons.math3.fraction.BigFraction>):400:(maxDegree - 1) * maxDegree |==> (maxDegree - 1) + maxDegree
339:AOR:*(int,int):-(int,int):org.apache.commons.math3.analysis.polynomials.PolynomialsUtils@computeUpToDegree(int,int,org.apache.commons.math3.analysis.polynomials.PolynomialsUtils.RecurrenceCoefficientsGenerator,java.util.List<org.apache.commons.math3.fraction.BigFraction>):400:(maxDegree - 1) * maxDegree |==> (maxDegree - 1) - maxDegree
340:AOR:*(int,int):/(int,int):org.apache.commons.math3.analysis.polynomials.PolynomialsUtils@computeUpToDegree(int,int,org.apache.commons.math3.analysis.polynomials.PolynomialsUtils.RecurrenceCoefficientsGenerator,java.util.List<org.apache.commons.math3.fraction.BigFraction>):400:(maxDegree - 1) * maxDegree |==> (maxDegree - 1) / maxDegree
341:LVR:POS:0:org.apache.commons.math3.analysis.polynomials.PolynomialsUtils@computeUpToDegree(int,int,org.apache.commons.math3.analysis.polynomials.PolynomialsUtils.RecurrenceCoefficientsGenerator,java.util.List<org.apache.commons.math3.fraction.BigFraction>):400:2 |==> 0
342:LVR:POS:NEG:org.apache.commons.math3.analysis.polynomials.PolynomialsUtils@computeUpToDegree(int,int,org.apache.commons.math3.analysis.polynomials.PolynomialsUtils.RecurrenceCoefficientsGenerator,java.util.List<org.apache.commons.math3.fraction.BigFraction>):400:2 |==> -2
343:AOR:/(int,int):%(int,int):org.apache.commons.math3.analysis.polynomials.PolynomialsUtils@computeUpToDegree(int,int,org.apache.commons.math3.analysis.polynomials.PolynomialsUtils.RecurrenceCoefficientsGenerator,java.util.List<org.apache.commons.math3.fraction.BigFraction>):400:(maxDegree - 1) * maxDegree / 2 |==> (maxDegree - 1) * maxDegree % 2
344:AOR:/(int,int):*(int,int):org.apache.commons.math3.analysis.polynomials.PolynomialsUtils@computeUpToDegree(int,int,org.apache.commons.math3.analysis.polynomials.PolynomialsUtils.RecurrenceCoefficientsGenerator,java.util.List<org.apache.commons.math3.fraction.BigFraction>):400:(maxDegree - 1) * maxDegree / 2 |==> (maxDegree - 1) * maxDegree * 2
345:AOR:/(int,int):+(int,int):org.apache.commons.math3.analysis.polynomials.PolynomialsUtils@computeUpToDegree(int,int,org.apache.commons.math3.analysis.polynomials.PolynomialsUtils.RecurrenceCoefficientsGenerator,java.util.List<org.apache.commons.math3.fraction.BigFraction>):400:(maxDegree - 1) * maxDegree / 2 |==> (maxDegree - 1) * maxDegree + 2
346:AOR:/(int,int):-(int,int):org.apache.commons.math3.analysis.polynomials.PolynomialsUtils@computeUpToDegree(int,int,org.apache.commons.math3.analysis.polynomials.PolynomialsUtils.RecurrenceCoefficientsGenerator,java.util.List<org.apache.commons.math3.fraction.BigFraction>):400:(maxDegree - 1) * maxDegree / 2 |==> (maxDegree - 1) * maxDegree - 2
347:EVR:<IDENTIFIER(int)>:<DEFAULT>:org.apache.commons.math3.analysis.polynomials.PolynomialsUtils@computeUpToDegree(int,int,org.apache.commons.math3.analysis.polynomials.PolynomialsUtils.RecurrenceCoefficientsGenerator,java.util.List<org.apache.commons.math3.fraction.BigFraction>):401:maxDegree |==> 0
348:ROR:<(int,int):!=(int,int):org.apache.commons.math3.analysis.polynomials.PolynomialsUtils@computeUpToDegree(int,int,org.apache.commons.math3.analysis.polynomials.PolynomialsUtils.RecurrenceCoefficientsGenerator,java.util.List<org.apache.commons.math3.fraction.BigFraction>):401:k < degree |==> k != degree
349:ROR:<(int,int):<=(int,int):org.apache.commons.math3.analysis.polynomials.PolynomialsUtils@computeUpToDegree(int,int,org.apache.commons.math3.analysis.polynomials.PolynomialsUtils.RecurrenceCoefficientsGenerator,java.util.List<org.apache.commons.math3.fraction.BigFraction>):401:k < degree |==> k <= degree
350:ROR:<(int,int):FALSE(int,int):org.apache.commons.math3.analysis.polynomials.PolynomialsUtils@computeUpToDegree(int,int,org.apache.commons.math3.analysis.polynomials.PolynomialsUtils.RecurrenceCoefficientsGenerator,java.util.List<org.apache.commons.math3.fraction.BigFraction>):401:k < degree |==> false
351:EVR:<IDENTIFIER(int)>:<DEFAULT>:org.apache.commons.math3.analysis.polynomials.PolynomialsUtils@computeUpToDegree(int,int,org.apache.commons.math3.analysis.polynomials.PolynomialsUtils.RecurrenceCoefficientsGenerator,java.util.List<org.apache.commons.math3.fraction.BigFraction>):404:startK |==> 0
352:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math3.analysis.polynomials.PolynomialsUtils@computeUpToDegree(int,int,org.apache.commons.math3.analysis.polynomials.PolynomialsUtils.RecurrenceCoefficientsGenerator,java.util.List<org.apache.commons.math3.fraction.BigFraction>):405:startK += k |==> <NO-OP>
353:EVR:<METHOD_INVOCATION(org.apache.commons.math3.fraction.BigFraction[])>:<DEFAULT>:org.apache.commons.math3.analysis.polynomials.PolynomialsUtils@computeUpToDegree(int,int,org.apache.commons.math3.analysis.polynomials.PolynomialsUtils.RecurrenceCoefficientsGenerator,java.util.List<org.apache.commons.math3.fraction.BigFraction>):408:generator.generate(k) |==> null
354:EVR:<METHOD_INVOCATION(org.apache.commons.math3.fraction.BigFraction)>:<DEFAULT>:org.apache.commons.math3.analysis.polynomials.PolynomialsUtils@computeUpToDegree(int,int,org.apache.commons.math3.analysis.polynomials.PolynomialsUtils.RecurrenceCoefficientsGenerator,java.util.List<org.apache.commons.math3.fraction.BigFraction>):410:coefficients.get(startK) |==> null
355:EVR:<METHOD_INVOCATION(org.apache.commons.math3.fraction.BigFraction)>:<DEFAULT>:org.apache.commons.math3.analysis.polynomials.PolynomialsUtils@computeUpToDegree(int,int,org.apache.commons.math3.analysis.polynomials.PolynomialsUtils.RecurrenceCoefficientsGenerator,java.util.List<org.apache.commons.math3.fraction.BigFraction>):411:coefficients.get(startKm1) |==> null
356:LVR:0:POS:org.apache.commons.math3.analysis.polynomials.PolynomialsUtils@computeUpToDegree(int,int,org.apache.commons.math3.analysis.polynomials.PolynomialsUtils.RecurrenceCoefficientsGenerator,java.util.List<org.apache.commons.math3.fraction.BigFraction>):414:0 |==> 1
357:LVR:0:NEG:org.apache.commons.math3.analysis.polynomials.PolynomialsUtils@computeUpToDegree(int,int,org.apache.commons.math3.analysis.polynomials.PolynomialsUtils.RecurrenceCoefficientsGenerator,java.util.List<org.apache.commons.math3.fraction.BigFraction>):414:0 |==> -1
358:LVR:POS:0:org.apache.commons.math3.analysis.polynomials.PolynomialsUtils@computeUpToDegree(int,int,org.apache.commons.math3.analysis.polynomials.PolynomialsUtils.RecurrenceCoefficientsGenerator,java.util.List<org.apache.commons.math3.fraction.BigFraction>):414:2 |==> 0
359:LVR:POS:NEG:org.apache.commons.math3.analysis.polynomials.PolynomialsUtils@computeUpToDegree(int,int,org.apache.commons.math3.analysis.polynomials.PolynomialsUtils.RecurrenceCoefficientsGenerator,java.util.List<org.apache.commons.math3.fraction.BigFraction>):414:2 |==> -2
360:STD:<CALL>:<NO-OP>:org.apache.commons.math3.analysis.polynomials.PolynomialsUtils@computeUpToDegree(int,int,org.apache.commons.math3.analysis.polynomials.PolynomialsUtils.RecurrenceCoefficientsGenerator,java.util.List<org.apache.commons.math3.fraction.BigFraction>):414:coefficients.add(ck.multiply(ai[0]).subtract(ckm1.multiply(ai[2]))) |==> <NO-OP>
361:LVR:POS:0:org.apache.commons.math3.analysis.polynomials.PolynomialsUtils@computeUpToDegree(int,int,org.apache.commons.math3.analysis.polynomials.PolynomialsUtils.RecurrenceCoefficientsGenerator,java.util.List<org.apache.commons.math3.fraction.BigFraction>):417:1 |==> 0
362:LVR:POS:NEG:org.apache.commons.math3.analysis.polynomials.PolynomialsUtils@computeUpToDegree(int,int,org.apache.commons.math3.analysis.polynomials.PolynomialsUtils.RecurrenceCoefficientsGenerator,java.util.List<org.apache.commons.math3.fraction.BigFraction>):417:1 |==> -1
363:ROR:<(int,int):!=(int,int):org.apache.commons.math3.analysis.polynomials.PolynomialsUtils@computeUpToDegree(int,int,org.apache.commons.math3.analysis.polynomials.PolynomialsUtils.RecurrenceCoefficientsGenerator,java.util.List<org.apache.commons.math3.fraction.BigFraction>):417:i < k |==> i != k
364:ROR:<(int,int):<=(int,int):org.apache.commons.math3.analysis.polynomials.PolynomialsUtils@computeUpToDegree(int,int,org.apache.commons.math3.analysis.polynomials.PolynomialsUtils.RecurrenceCoefficientsGenerator,java.util.List<org.apache.commons.math3.fraction.BigFraction>):417:i < k |==> i <= k
365:ROR:<(int,int):FALSE(int,int):org.apache.commons.math3.analysis.polynomials.PolynomialsUtils@computeUpToDegree(int,int,org.apache.commons.math3.analysis.polynomials.PolynomialsUtils.RecurrenceCoefficientsGenerator,java.util.List<org.apache.commons.math3.fraction.BigFraction>):417:i < k |==> false
366:EVR:<IDENTIFIER(org.apache.commons.math3.fraction.BigFraction)>:<DEFAULT>:org.apache.commons.math3.analysis.polynomials.PolynomialsUtils@computeUpToDegree(int,int,org.apache.commons.math3.analysis.polynomials.PolynomialsUtils.RecurrenceCoefficientsGenerator,java.util.List<org.apache.commons.math3.fraction.BigFraction>):418:ck |==> null
367:AOR:+(int,int):%(int,int):org.apache.commons.math3.analysis.polynomials.PolynomialsUtils@computeUpToDegree(int,int,org.apache.commons.math3.analysis.polynomials.PolynomialsUtils.RecurrenceCoefficientsGenerator,java.util.List<org.apache.commons.math3.fraction.BigFraction>):419:startK + i |==> startK % i
368:AOR:+(int,int):*(int,int):org.apache.commons.math3.analysis.polynomials.PolynomialsUtils@computeUpToDegree(int,int,org.apache.commons.math3.analysis.polynomials.PolynomialsUtils.RecurrenceCoefficientsGenerator,java.util.List<org.apache.commons.math3.fraction.BigFraction>):419:startK + i |==> startK * i
369:AOR:+(int,int):-(int,int):org.apache.commons.math3.analysis.polynomials.PolynomialsUtils@computeUpToDegree(int,int,org.apache.commons.math3.analysis.polynomials.PolynomialsUtils.RecurrenceCoefficientsGenerator,java.util.List<org.apache.commons.math3.fraction.BigFraction>):419:startK + i |==> startK - i
370:AOR:+(int,int):/(int,int):org.apache.commons.math3.analysis.polynomials.PolynomialsUtils@computeUpToDegree(int,int,org.apache.commons.math3.analysis.polynomials.PolynomialsUtils.RecurrenceCoefficientsGenerator,java.util.List<org.apache.commons.math3.fraction.BigFraction>):419:startK + i |==> startK / i
371:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math3.analysis.polynomials.PolynomialsUtils@computeUpToDegree(int,int,org.apache.commons.math3.analysis.polynomials.PolynomialsUtils.RecurrenceCoefficientsGenerator,java.util.List<org.apache.commons.math3.fraction.BigFraction>):419:ck = coefficients.get(startK + i) |==> <NO-OP>
372:AOR:+(int,int):%(int,int):org.apache.commons.math3.analysis.polynomials.PolynomialsUtils@computeUpToDegree(int,int,org.apache.commons.math3.analysis.polynomials.PolynomialsUtils.RecurrenceCoefficientsGenerator,java.util.List<org.apache.commons.math3.fraction.BigFraction>):420:startKm1 + i |==> startKm1 % i
373:AOR:+(int,int):*(int,int):org.apache.commons.math3.analysis.polynomials.PolynomialsUtils@computeUpToDegree(int,int,org.apache.commons.math3.analysis.polynomials.PolynomialsUtils.RecurrenceCoefficientsGenerator,java.util.List<org.apache.commons.math3.fraction.BigFraction>):420:startKm1 + i |==> startKm1 * i
374:AOR:+(int,int):-(int,int):org.apache.commons.math3.analysis.polynomials.PolynomialsUtils@computeUpToDegree(int,int,org.apache.commons.math3.analysis.polynomials.PolynomialsUtils.RecurrenceCoefficientsGenerator,java.util.List<org.apache.commons.math3.fraction.BigFraction>):420:startKm1 + i |==> startKm1 - i
375:AOR:+(int,int):/(int,int):org.apache.commons.math3.analysis.polynomials.PolynomialsUtils@computeUpToDegree(int,int,org.apache.commons.math3.analysis.polynomials.PolynomialsUtils.RecurrenceCoefficientsGenerator,java.util.List<org.apache.commons.math3.fraction.BigFraction>):420:startKm1 + i |==> startKm1 / i
376:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math3.analysis.polynomials.PolynomialsUtils@computeUpToDegree(int,int,org.apache.commons.math3.analysis.polynomials.PolynomialsUtils.RecurrenceCoefficientsGenerator,java.util.List<org.apache.commons.math3.fraction.BigFraction>):420:ckm1 = coefficients.get(startKm1 + i) |==> <NO-OP>
377:LVR:0:POS:org.apache.commons.math3.analysis.polynomials.PolynomialsUtils@computeUpToDegree(int,int,org.apache.commons.math3.analysis.polynomials.PolynomialsUtils.RecurrenceCoefficientsGenerator,java.util.List<org.apache.commons.math3.fraction.BigFraction>):421:0 |==> 1
378:LVR:0:NEG:org.apache.commons.math3.analysis.polynomials.PolynomialsUtils@computeUpToDegree(int,int,org.apache.commons.math3.analysis.polynomials.PolynomialsUtils.RecurrenceCoefficientsGenerator,java.util.List<org.apache.commons.math3.fraction.BigFraction>):421:0 |==> -1
379:LVR:POS:0:org.apache.commons.math3.analysis.polynomials.PolynomialsUtils@computeUpToDegree(int,int,org.apache.commons.math3.analysis.polynomials.PolynomialsUtils.RecurrenceCoefficientsGenerator,java.util.List<org.apache.commons.math3.fraction.BigFraction>):421:1 |==> 0
380:LVR:POS:NEG:org.apache.commons.math3.analysis.polynomials.PolynomialsUtils@computeUpToDegree(int,int,org.apache.commons.math3.analysis.polynomials.PolynomialsUtils.RecurrenceCoefficientsGenerator,java.util.List<org.apache.commons.math3.fraction.BigFraction>):421:1 |==> -1
381:LVR:POS:0:org.apache.commons.math3.analysis.polynomials.PolynomialsUtils@computeUpToDegree(int,int,org.apache.commons.math3.analysis.polynomials.PolynomialsUtils.RecurrenceCoefficientsGenerator,java.util.List<org.apache.commons.math3.fraction.BigFraction>):421:2 |==> 0
382:LVR:POS:NEG:org.apache.commons.math3.analysis.polynomials.PolynomialsUtils@computeUpToDegree(int,int,org.apache.commons.math3.analysis.polynomials.PolynomialsUtils.RecurrenceCoefficientsGenerator,java.util.List<org.apache.commons.math3.fraction.BigFraction>):421:2 |==> -2
383:STD:<CALL>:<NO-OP>:org.apache.commons.math3.analysis.polynomials.PolynomialsUtils@computeUpToDegree(int,int,org.apache.commons.math3.analysis.polynomials.PolynomialsUtils.RecurrenceCoefficientsGenerator,java.util.List<org.apache.commons.math3.fraction.BigFraction>):421:coefficients.add(ck.multiply(ai[0]).add(ckPrev.multiply(ai[1])).subtract(ckm1.multiply(ai[2]))) |==> <NO-OP>
384:EVR:<IDENTIFIER(org.apache.commons.math3.fraction.BigFraction)>:<DEFAULT>:org.apache.commons.math3.analysis.polynomials.PolynomialsUtils@computeUpToDegree(int,int,org.apache.commons.math3.analysis.polynomials.PolynomialsUtils.RecurrenceCoefficientsGenerator,java.util.List<org.apache.commons.math3.fraction.BigFraction>):425:ck |==> null
385:AOR:+(int,int):%(int,int):org.apache.commons.math3.analysis.polynomials.PolynomialsUtils@computeUpToDegree(int,int,org.apache.commons.math3.analysis.polynomials.PolynomialsUtils.RecurrenceCoefficientsGenerator,java.util.List<org.apache.commons.math3.fraction.BigFraction>):426:startK + k |==> startK % k
386:AOR:+(int,int):*(int,int):org.apache.commons.math3.analysis.polynomials.PolynomialsUtils@computeUpToDegree(int,int,org.apache.commons.math3.analysis.polynomials.PolynomialsUtils.RecurrenceCoefficientsGenerator,java.util.List<org.apache.commons.math3.fraction.BigFraction>):426:startK + k |==> startK * k
387:AOR:+(int,int):-(int,int):org.apache.commons.math3.analysis.polynomials.PolynomialsUtils@computeUpToDegree(int,int,org.apache.commons.math3.analysis.polynomials.PolynomialsUtils.RecurrenceCoefficientsGenerator,java.util.List<org.apache.commons.math3.fraction.BigFraction>):426:startK + k |==> startK - k
388:AOR:+(int,int):/(int,int):org.apache.commons.math3.analysis.polynomials.PolynomialsUtils@computeUpToDegree(int,int,org.apache.commons.math3.analysis.polynomials.PolynomialsUtils.RecurrenceCoefficientsGenerator,java.util.List<org.apache.commons.math3.fraction.BigFraction>):426:startK + k |==> startK / k
389:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math3.analysis.polynomials.PolynomialsUtils@computeUpToDegree(int,int,org.apache.commons.math3.analysis.polynomials.PolynomialsUtils.RecurrenceCoefficientsGenerator,java.util.List<org.apache.commons.math3.fraction.BigFraction>):426:ck = coefficients.get(startK + k) |==> <NO-OP>
390:LVR:0:POS:org.apache.commons.math3.analysis.polynomials.PolynomialsUtils@computeUpToDegree(int,int,org.apache.commons.math3.analysis.polynomials.PolynomialsUtils.RecurrenceCoefficientsGenerator,java.util.List<org.apache.commons.math3.fraction.BigFraction>):427:0 |==> 1
391:LVR:0:NEG:org.apache.commons.math3.analysis.polynomials.PolynomialsUtils@computeUpToDegree(int,int,org.apache.commons.math3.analysis.polynomials.PolynomialsUtils.RecurrenceCoefficientsGenerator,java.util.List<org.apache.commons.math3.fraction.BigFraction>):427:0 |==> -1
392:LVR:POS:0:org.apache.commons.math3.analysis.polynomials.PolynomialsUtils@computeUpToDegree(int,int,org.apache.commons.math3.analysis.polynomials.PolynomialsUtils.RecurrenceCoefficientsGenerator,java.util.List<org.apache.commons.math3.fraction.BigFraction>):427:1 |==> 0
393:LVR:POS:NEG:org.apache.commons.math3.analysis.polynomials.PolynomialsUtils@computeUpToDegree(int,int,org.apache.commons.math3.analysis.polynomials.PolynomialsUtils.RecurrenceCoefficientsGenerator,java.util.List<org.apache.commons.math3.fraction.BigFraction>):427:1 |==> -1
394:STD:<CALL>:<NO-OP>:org.apache.commons.math3.analysis.polynomials.PolynomialsUtils@computeUpToDegree(int,int,org.apache.commons.math3.analysis.polynomials.PolynomialsUtils.RecurrenceCoefficientsGenerator,java.util.List<org.apache.commons.math3.fraction.BigFraction>):427:coefficients.add(ck.multiply(ai[0]).add(ckPrev.multiply(ai[1]))) |==> <NO-OP>
395:LVR:POS:0:org.apache.commons.math3.analysis.polynomials.PolynomialsUtils@computeUpToDegree(int,int,org.apache.commons.math3.analysis.polynomials.PolynomialsUtils.RecurrenceCoefficientsGenerator,java.util.List<org.apache.commons.math3.fraction.BigFraction>):430:1 |==> 0
396:LVR:POS:NEG:org.apache.commons.math3.analysis.polynomials.PolynomialsUtils@computeUpToDegree(int,int,org.apache.commons.math3.analysis.polynomials.PolynomialsUtils.RecurrenceCoefficientsGenerator,java.util.List<org.apache.commons.math3.fraction.BigFraction>):430:1 |==> -1
397:STD:<CALL>:<NO-OP>:org.apache.commons.math3.analysis.polynomials.PolynomialsUtils@computeUpToDegree(int,int,org.apache.commons.math3.analysis.polynomials.PolynomialsUtils.RecurrenceCoefficientsGenerator,java.util.List<org.apache.commons.math3.fraction.BigFraction>):430:coefficients.add(ck.multiply(ai[1])) |==> <NO-OP>
