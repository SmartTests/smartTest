[
  {
    "v1": {
      "line": "62",
      "statement": "MicrosphereInterpolator ()"
    }
  },
  {
    "v2": {
      "line": "63",
      "statement": "this(DEFAULT_MICROSPHERE_ELEMENTS, DEFAULT_BRIGHTNESS_EXPONENT)"
    }
  },
  {
    "v3": {
      "line": "73",
      "statement": "MicrosphereInterpolator (final int elements,  final int exponent)"
    }
  },
  {
    "v4": {
      "line": "77",
      "statement": "if (exponent < 0)"
    }
  },
  {
    "v5": {
      "line": "78",
      "statement": "throw new NotPositiveException(exponent)"
    }
  },
  {
    "v6": {
      "line": 0,
      "statement": "\"endif"
    }
  },
  {
    "v7": {
      "line": "80",
      "statement": "if (elements <= 0)"
    }
  },
  {
    "v8": {
      "line": "81",
      "statement": "throw new NotStrictlyPositiveException(elements)"
    }
  },
  {
    "v9": {
      "line": 0,
      "statement": "\"endif"
    }
  },
  {
    "v10": {
      "line": "84",
      "statement": "microsphereElements = elements"
    }
  },
  {
    "v11": {
      "line": "85",
      "statement": "brightnessExponent = exponent"
    }
  },
  {
    "v12": {
      "line": "91",
      "statement": "MultivariateFunction interpolate(final double[][] xval, final double[] yval)"
    }
  },
  {
    "v13": {
      "line": "96",
      "statement": "final UnitSphereRandomVectorGenerator rand = new UnitSphereRandomVectorGenerator(xval[0].length)"
    }
  },
  {
    "v14": {
      "line": "98",
      "statement": "return new MicrosphereInterpolatingFunction(xval, yval, brightnessExponent, microsphereElements, rand)"
    }
  }
]