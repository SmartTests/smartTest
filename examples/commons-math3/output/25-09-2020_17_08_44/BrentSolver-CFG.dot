digraph BrentSolver_CFG {
  // graph-vertices
  v1  [label="46:  BrentSolver ()"];
  v2  [label="47:  this(DEFAULT_ABSOLUTE_ACCURACY)"];
  v3  [label="54:  BrentSolver (double absoluteAccuracy)"];
  v4  [label="55:  super(absoluteAccuracy)"];
  v5  [label="63:  BrentSolver (double relativeAccuracy,  double absoluteAccuracy)"];
  v6  [label="65:  super(relativeAccuracy, absoluteAccuracy)"];
  v7  [label="74:  BrentSolver (double relativeAccuracy,  double absoluteAccuracy,  double functionValueAccuracy)"];
  v8  [label="77:  super(relativeAccuracy, absoluteAccuracy, functionValueAccuracy)"];
  v9  [label="84:  double doSolve()"];
  v10  [label="88:  double min = getMin()"];
  v11  [label="89:  double max = getMax()"];
  v12  [label="90:  final double initial = getStartValue()"];
  v13  [label="91:  final double functionValueAccuracy = getFunctionValueAccuracy()"];
  v14  [label="93:  verifySequence(min, initial, max)"];
  v15  [label="96:  double yInitial = computeObjectiveValue(initial)"];
  v16  [label="97:  if (FastMath.abs(yInitial) <= functionValueAccuracy)"];
  v17  [label="98:  return initial;"];
  v18  [label="endif"];
  v19  [label="102:  double yMin = computeObjectiveValue(min)"];
  v20  [label="103:  if (FastMath.abs(yMin) <= functionValueAccuracy)"];
  v21  [label="104:  return min;"];
  v22  [label="endif"];
  v23  [label="108:  if (yInitial * yMin < 0)"];
  v24  [label="109:  return brent(min, initial, yMin, yInitial);"];
  v25  [label="endif"];
  v26  [label="113:  double yMax = computeObjectiveValue(max)"];
  v27  [label="114:  if (FastMath.abs(yMax) <= functionValueAccuracy)"];
  v28  [label="115:  return max;"];
  v29  [label="endif"];
  v30  [label="119:  if (yInitial * yMax < 0)"];
  v31  [label="120:  return brent(initial, max, yInitial, yMax);"];
  v32  [label="endif"];
  v33  [label="123:  throw new NoBracketingException(min, max, yMin, yMax)"];
  v34  [label="142:  double brent(double lo, double hi,  double fLo, double fHi)"];
  v35  [label="144:  double a = lo"];
  v36  [label="145:  double fa = fLo"];
  v37  [label="146:  double b = hi"];
  v38  [label="147:  double fb = fHi"];
  v39  [label="148:  double c = a"];
  v40  [label="149:  double fc = fa"];
  v41  [label="150:  double d = b - a"];
  v42  [label="151:  double e = d"];
  v43  [label="153:  final double t = getAbsoluteAccuracy()"];
  v44  [label="154:  final double eps = getRelativeAccuracy()"];
  v45  [label="156:  while (true)"];
  v46  [label="endwhile"];
  v47  [label="157:  if (FastMath.abs(fc) < FastMath.abs(fb))"];
  v48  [label="158:  a = b"];
  v49  [label="159:  b = c"];
  v50  [label="160:  c = a"];
  v51  [label="161:  fa = fb"];
  v52  [label="162:  fb = fc"];
  v53  [label="163:  fc = fa"];
  v54  [label="endif"];
  v55  [label="166:  final double tol = 2 * eps * FastMath.abs(b) + t"];
  v56  [label="167:  final double m = 0.5 * (c - b)"];
  v57  [label="169:  if (FastMath.abs(m) <= tol || Precision.equals(fb, 0))"];
  v58  [label="171:  return b;"];
  v59  [label="endif"];
  v60  [label="173:  if (FastMath.abs(e) < tol || FastMath.abs(fa) <= FastMath.abs(fb))"];
  v61  [label="176:  d = m"];
  v62  [label="177:  e = d"];
  v63  [label="endif"];
  v64  [label="179:  double s = fb / fa"];
  v65  [label="180:  double p"];
  v66  [label="181:  double q"];
  v67  [label="185:  if (a == c)"];
  v68  [label="187:  p = 2 * m * s"];
  v69  [label="188:  q = 1 - s"];
  v70  [label="endif"];
  v71  [label="191:  q = fa / fc"];
  v72  [label="192:  final double r = fb / fc"];
  v73  [label="193:  p = s * (2 * m * q * (q - r) - (b - a) * (r - 1))"];
  v74  [label="194:  q = (q - 1) * (r - 1) * (s - 1)"];
  v75  [label="196:  if (p > 0)"];
  v76  [label="197:  q = -q"];
  v77  [label="endif"];
  v78  [label="199:  p = -p"];
  v79  [label="201:  s = e"];
  v80  [label="202:  e = d"];
  v81  [label="203:  if (p >= 1.5 * m * q - FastMath.abs(tol * q) || p >= FastMath.abs(0.5 * s * q))"];
  v82  [label="208:  d = m"];
  v83  [label="209:  e = d"];
  v84  [label="endif"];
  v85  [label="211:  d = p / q"];
  v86  [label="214:  a = b"];
  v87  [label="215:  fa = fb"];
  v88  [label="217:  if (FastMath.abs(d) > tol)"];
  v89  [label="218:  b += d"];
  v90  [label="endif"];
  v91  [label="219:  if (m > 0)"];
  v92  [label="220:  b += tol"];
  v93  [label="endif"];
  v94  [label="222:  b -= tol"];
  v95  [label="224:  fb = computeObjectiveValue(b)"];
  v96  [label="225:  if ((fb > 0 && fc > 0) || (fb <= 0 && fc <= 0))"];
  v97  [label="227:  c = a"];
  v98  [label="228:  fc = fa"];
  v99  [label="229:  d = b - a"];
  v100  [label="230:  e = d"];
  v101  [label="endif"];
  // graph-edges
  v1 -> v2;
  v3 -> v4;
  v5 -> v6;
  v7 -> v8;
  v9 -> v10;
  v10 -> v11;
  v11 -> v12;
  v12 -> v13;
  v13 -> v14;
  v14 -> v15;
  v15 -> v16;
  v16 -> v17  [label="True"];
  v16 -> v18  [label="False"];
  v18 -> v19;
  v19 -> v20;
  v20 -> v21  [label="True"];
  v20 -> v22  [label="False"];
  v22 -> v23;
  v23 -> v24  [label="True"];
  v23 -> v25  [label="False"];
  v25 -> v26;
  v26 -> v27;
  v27 -> v28  [label="True"];
  v27 -> v29  [label="False"];
  v29 -> v30;
  v30 -> v31  [label="True"];
  v30 -> v32  [label="False"];
  v32 -> v33;
  v34 -> v35;
  v35 -> v36;
  v36 -> v37;
  v37 -> v38;
  v38 -> v39;
  v39 -> v40;
  v40 -> v41;
  v41 -> v42;
  v42 -> v43;
  v43 -> v44;
  v44 -> v45;
  v45 -> v46  [label="False"];
  v45 -> v47  [label="True"];
  v47 -> v48  [label="True"];
  v48 -> v49;
  v49 -> v50;
  v50 -> v51;
  v51 -> v52;
  v52 -> v53;
  v53 -> v54;
  v47 -> v54  [label="False"];
  v54 -> v55;
  v55 -> v56;
  v56 -> v57;
  v57 -> v58  [label="True"];
  v57 -> v59  [label="False"];
  v59 -> v60;
  v60 -> v61  [label="True"];
  v61 -> v62;
  v62 -> v63;
  v60 -> v64  [label="False"];
  v64 -> v65;
  v65 -> v66;
  v66 -> v67;
  v67 -> v68  [label="True"];
  v68 -> v69;
  v69 -> v70;
  v67 -> v71  [label="False"];
  v71 -> v72;
  v72 -> v73;
  v73 -> v74;
  v74 -> v70;
  v70 -> v75;
  v75 -> v76  [label="True"];
  v76 -> v77;
  v75 -> v78  [label="False"];
  v78 -> v77;
  v77 -> v79;
  v79 -> v80;
  v80 -> v81;
  v81 -> v82  [label="True"];
  v82 -> v83;
  v83 -> v84;
  v81 -> v85  [label="False"];
  v85 -> v84;
  v84 -> v63;
  v63 -> v86;
  v86 -> v87;
  v87 -> v88;
  v88 -> v89  [label="True"];
  v89 -> v90;
  v88 -> v91  [label="False"];
  v91 -> v92  [label="True"];
  v92 -> v93;
  v91 -> v94  [label="False"];
  v94 -> v93;
  v93 -> v90;
  v90 -> v95;
  v95 -> v96;
  v96 -> v97  [label="True"];
  v97 -> v98;
  v98 -> v99;
  v99 -> v100;
  v100 -> v101;
  v96 -> v101  [label="False"];
  v101 -> v45;
  // end-of-graph
}
