[
  {
    "v1": {
      "line": "49",
      "statement": "SecantSolver ()"
    }
  },
  {
    "v2": {
      "line": "50",
      "statement": "super(DEFAULT_ABSOLUTE_ACCURACY)"
    }
  },
  {
    "v3": {
      "line": "58",
      "statement": "SecantSolver (final double absoluteAccuracy)"
    }
  },
  {
    "v4": {
      "line": "59",
      "statement": "super(absoluteAccuracy)"
    }
  },
  {
    "v5": {
      "line": "68",
      "statement": "SecantSolver (final double relativeAccuracy, final double absoluteAccuracy)"
    }
  },
  {
    "v6": {
      "line": "70",
      "statement": "super(relativeAccuracy, absoluteAccuracy)"
    }
  },
  {
    "v7": {
      "line": "75",
      "statement": "double doSolve()"
    }
  },
  {
    "v8": {
      "line": "79",
      "statement": "double x0 = getMin()"
    }
  },
  {
    "v9": {
      "line": "80",
      "statement": "double x1 = getMax()"
    }
  },
  {
    "v10": {
      "line": "81",
      "statement": "double f0 = computeObjectiveValue(x0)"
    }
  },
  {
    "v11": {
      "line": "82",
      "statement": "double f1 = computeObjectiveValue(x1)"
    }
  },
  {
    "v12": {
      "line": "87",
      "statement": "if (f0 == 0.0)"
    }
  },
  {
    "v13": {
      "line": "88",
      "statement": "return x0"
    }
  },
  {
    "v14": {
      "line": 0,
      "statement": "\"endif"
    }
  },
  {
    "v15": {
      "line": "90",
      "statement": "if (f1 == 0.0)"
    }
  },
  {
    "v16": {
      "line": "91",
      "statement": "return x1"
    }
  },
  {
    "v17": {
      "line": 0,
      "statement": "\"endif"
    }
  },
  {
    "v18": {
      "line": "95",
      "statement": "verifyBracketing(x0, x1)"
    }
  },
  {
    "v19": {
      "line": "98",
      "statement": "final double ftol = getFunctionValueAccuracy()"
    }
  },
  {
    "v20": {
      "line": "99",
      "statement": "final double atol = getAbsoluteAccuracy()"
    }
  },
  {
    "v21": {
      "line": "100",
      "statement": "final double rtol = getRelativeAccuracy()"
    }
  },
  {
    "v22": {
      "line": "103",
      "statement": "while (true)"
    }
  },
  {
    "v23": {
      "line": 0,
      "statement": "\"endwhile"
    }
  },
  {
    "v24": {
      "line": "105",
      "statement": "final double x = x1 - ((f1 * (x1 - x0)) / (f1 - f0))"
    }
  },
  {
    "v25": {
      "line": "106",
      "statement": "final double fx = computeObjectiveValue(x)"
    }
  },
  {
    "v26": {
      "line": "111",
      "statement": "if (fx == 0.0)"
    }
  },
  {
    "v27": {
      "line": "112",
      "statement": "return x"
    }
  },
  {
    "v28": {
      "line": 0,
      "statement": "\"endif"
    }
  },
  {
    "v29": {
      "line": "116",
      "statement": "x0 = x1"
    }
  },
  {
    "v30": {
      "line": "117",
      "statement": "f0 = f1"
    }
  },
  {
    "v31": {
      "line": "118",
      "statement": "x1 = x"
    }
  },
  {
    "v32": {
      "line": "119",
      "statement": "f1 = fx"
    }
  },
  {
    "v33": {
      "line": "124",
      "statement": "if (FastMath.abs(f1) <= ftol)"
    }
  },
  {
    "v34": {
      "line": "125",
      "statement": "return x1"
    }
  },
  {
    "v35": {
      "line": 0,
      "statement": "\"endif"
    }
  },
  {
    "v36": {
      "line": "130",
      "statement": "if (FastMath.abs(x1 - x0) < FastMath.max(rtol * FastMath.abs(x1), atol))"
    }
  },
  {
    "v37": {
      "line": "131",
      "statement": "return x1"
    }
  },
  {
    "v38": {
      "line": 0,
      "statement": "\"endif"
    }
  }
]